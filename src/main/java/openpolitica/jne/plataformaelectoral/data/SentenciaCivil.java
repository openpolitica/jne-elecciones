/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package openpolitica.jne.plataformaelectoral.data;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class SentenciaCivil extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 9143821112944848125L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SentenciaCivil\",\"namespace\":\"openpolitica.jne.elecciones.data\",\"fields\":[{\"name\":\"materia_sentencia\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"expediente_obliga\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"TXEXPEDIENTEOBLIGA\"},{\"name\":\"organo_judicial_obliga\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"TXORGANOJURIDICIALOBLIGA\"},{\"name\":\"fallo_obliga\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SentenciaCivil> ENCODER =
      new BinaryMessageEncoder<SentenciaCivil>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SentenciaCivil> DECODER =
      new BinaryMessageDecoder<SentenciaCivil>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<SentenciaCivil> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<SentenciaCivil> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<SentenciaCivil> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SentenciaCivil>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this SentenciaCivil to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a SentenciaCivil from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a SentenciaCivil instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static SentenciaCivil fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String materia_sentencia;
  /** TXEXPEDIENTEOBLIGA */
   private java.lang.String expediente_obliga;
  /** TXORGANOJURIDICIALOBLIGA */
   private java.lang.String organo_judicial_obliga;
   private java.lang.String fallo_obliga;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SentenciaCivil() {}

  /**
   * All-args constructor.
   * @param materia_sentencia The new value for materia_sentencia
   * @param expediente_obliga TXEXPEDIENTEOBLIGA
   * @param organo_judicial_obliga TXORGANOJURIDICIALOBLIGA
   * @param fallo_obliga The new value for fallo_obliga
   */
  public SentenciaCivil(java.lang.String materia_sentencia, java.lang.String expediente_obliga, java.lang.String organo_judicial_obliga, java.lang.String fallo_obliga) {
    this.materia_sentencia = materia_sentencia;
    this.expediente_obliga = expediente_obliga;
    this.organo_judicial_obliga = organo_judicial_obliga;
    this.fallo_obliga = fallo_obliga;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return materia_sentencia;
    case 1: return expediente_obliga;
    case 2: return organo_judicial_obliga;
    case 3: return fallo_obliga;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: materia_sentencia = value$ != null ? value$.toString() : null; break;
    case 1: expediente_obliga = value$ != null ? value$.toString() : null; break;
    case 2: organo_judicial_obliga = value$ != null ? value$.toString() : null; break;
    case 3: fallo_obliga = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'materia_sentencia' field.
   * @return The value of the 'materia_sentencia' field.
   */
  public java.lang.String getMateriaSentencia() {
    return materia_sentencia;
  }


  /**
   * Sets the value of the 'materia_sentencia' field.
   * @param value the value to set.
   */
  public void setMateriaSentencia(java.lang.String value) {
    this.materia_sentencia = value;
  }

  /**
   * Gets the value of the 'expediente_obliga' field.
   * @return TXEXPEDIENTEOBLIGA
   */
  public java.lang.String getExpedienteObliga() {
    return expediente_obliga;
  }


  /**
   * Sets the value of the 'expediente_obliga' field.
   * TXEXPEDIENTEOBLIGA
   * @param value the value to set.
   */
  public void setExpedienteObliga(java.lang.String value) {
    this.expediente_obliga = value;
  }

  /**
   * Gets the value of the 'organo_judicial_obliga' field.
   * @return TXORGANOJURIDICIALOBLIGA
   */
  public java.lang.String getOrganoJudicialObliga() {
    return organo_judicial_obliga;
  }


  /**
   * Sets the value of the 'organo_judicial_obliga' field.
   * TXORGANOJURIDICIALOBLIGA
   * @param value the value to set.
   */
  public void setOrganoJudicialObliga(java.lang.String value) {
    this.organo_judicial_obliga = value;
  }

  /**
   * Gets the value of the 'fallo_obliga' field.
   * @return The value of the 'fallo_obliga' field.
   */
  public java.lang.String getFalloObliga() {
    return fallo_obliga;
  }


  /**
   * Sets the value of the 'fallo_obliga' field.
   * @param value the value to set.
   */
  public void setFalloObliga(java.lang.String value) {
    this.fallo_obliga = value;
  }

  /**
   * Creates a new SentenciaCivil RecordBuilder.
   * @return A new SentenciaCivil RecordBuilder
   */
  public static openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder newBuilder() {
    return new openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder();
  }

  /**
   * Creates a new SentenciaCivil RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SentenciaCivil RecordBuilder
   */
  public static openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder newBuilder(openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder other) {
    if (other == null) {
      return new openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder();
    } else {
      return new openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder(other);
    }
  }

  /**
   * Creates a new SentenciaCivil RecordBuilder by copying an existing SentenciaCivil instance.
   * @param other The existing instance to copy.
   * @return A new SentenciaCivil RecordBuilder
   */
  public static openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder newBuilder(openpolitica.jne.plataformaelectoral.data.SentenciaCivil other) {
    if (other == null) {
      return new openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder();
    } else {
      return new openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder(other);
    }
  }

  /**
   * RecordBuilder for SentenciaCivil instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SentenciaCivil>
    implements org.apache.avro.data.RecordBuilder<SentenciaCivil> {

    private java.lang.String materia_sentencia;
    /** TXEXPEDIENTEOBLIGA */
    private java.lang.String expediente_obliga;
    /** TXORGANOJURIDICIALOBLIGA */
    private java.lang.String organo_judicial_obliga;
    private java.lang.String fallo_obliga;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.materia_sentencia)) {
        this.materia_sentencia = data().deepCopy(fields()[0].schema(), other.materia_sentencia);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.expediente_obliga)) {
        this.expediente_obliga = data().deepCopy(fields()[1].schema(), other.expediente_obliga);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.organo_judicial_obliga)) {
        this.organo_judicial_obliga = data().deepCopy(fields()[2].schema(), other.organo_judicial_obliga);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.fallo_obliga)) {
        this.fallo_obliga = data().deepCopy(fields()[3].schema(), other.fallo_obliga);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing SentenciaCivil instance
     * @param other The existing instance to copy.
     */
    private Builder(openpolitica.jne.plataformaelectoral.data.SentenciaCivil other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.materia_sentencia)) {
        this.materia_sentencia = data().deepCopy(fields()[0].schema(), other.materia_sentencia);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.expediente_obliga)) {
        this.expediente_obliga = data().deepCopy(fields()[1].schema(), other.expediente_obliga);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.organo_judicial_obliga)) {
        this.organo_judicial_obliga = data().deepCopy(fields()[2].schema(), other.organo_judicial_obliga);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.fallo_obliga)) {
        this.fallo_obliga = data().deepCopy(fields()[3].schema(), other.fallo_obliga);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'materia_sentencia' field.
      * @return The value.
      */
    public java.lang.String getMateriaSentencia() {
      return materia_sentencia;
    }


    /**
      * Sets the value of the 'materia_sentencia' field.
      * @param value The value of 'materia_sentencia'.
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder setMateriaSentencia(java.lang.String value) {
      validate(fields()[0], value);
      this.materia_sentencia = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'materia_sentencia' field has been set.
      * @return True if the 'materia_sentencia' field has been set, false otherwise.
      */
    public boolean hasMateriaSentencia() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'materia_sentencia' field.
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder clearMateriaSentencia() {
      materia_sentencia = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'expediente_obliga' field.
      * TXEXPEDIENTEOBLIGA
      * @return The value.
      */
    public java.lang.String getExpedienteObliga() {
      return expediente_obliga;
    }


    /**
      * Sets the value of the 'expediente_obliga' field.
      * TXEXPEDIENTEOBLIGA
      * @param value The value of 'expediente_obliga'.
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder setExpedienteObliga(java.lang.String value) {
      validate(fields()[1], value);
      this.expediente_obliga = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'expediente_obliga' field has been set.
      * TXEXPEDIENTEOBLIGA
      * @return True if the 'expediente_obliga' field has been set, false otherwise.
      */
    public boolean hasExpedienteObliga() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'expediente_obliga' field.
      * TXEXPEDIENTEOBLIGA
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder clearExpedienteObliga() {
      expediente_obliga = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'organo_judicial_obliga' field.
      * TXORGANOJURIDICIALOBLIGA
      * @return The value.
      */
    public java.lang.String getOrganoJudicialObliga() {
      return organo_judicial_obliga;
    }


    /**
      * Sets the value of the 'organo_judicial_obliga' field.
      * TXORGANOJURIDICIALOBLIGA
      * @param value The value of 'organo_judicial_obliga'.
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder setOrganoJudicialObliga(java.lang.String value) {
      validate(fields()[2], value);
      this.organo_judicial_obliga = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'organo_judicial_obliga' field has been set.
      * TXORGANOJURIDICIALOBLIGA
      * @return True if the 'organo_judicial_obliga' field has been set, false otherwise.
      */
    public boolean hasOrganoJudicialObliga() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'organo_judicial_obliga' field.
      * TXORGANOJURIDICIALOBLIGA
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder clearOrganoJudicialObliga() {
      organo_judicial_obliga = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'fallo_obliga' field.
      * @return The value.
      */
    public java.lang.String getFalloObliga() {
      return fallo_obliga;
    }


    /**
      * Sets the value of the 'fallo_obliga' field.
      * @param value The value of 'fallo_obliga'.
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder setFalloObliga(java.lang.String value) {
      validate(fields()[3], value);
      this.fallo_obliga = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'fallo_obliga' field has been set.
      * @return True if the 'fallo_obliga' field has been set, false otherwise.
      */
    public boolean hasFalloObliga() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'fallo_obliga' field.
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.SentenciaCivil.Builder clearFalloObliga() {
      fallo_obliga = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SentenciaCivil build() {
      try {
        SentenciaCivil record = new SentenciaCivil();
        record.materia_sentencia = fieldSetFlags()[0] ? this.materia_sentencia : (java.lang.String) defaultValue(fields()[0]);
        record.expediente_obliga = fieldSetFlags()[1] ? this.expediente_obliga : (java.lang.String) defaultValue(fields()[1]);
        record.organo_judicial_obliga = fieldSetFlags()[2] ? this.organo_judicial_obliga : (java.lang.String) defaultValue(fields()[2]);
        record.fallo_obliga = fieldSetFlags()[3] ? this.fallo_obliga : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SentenciaCivil>
    WRITER$ = (org.apache.avro.io.DatumWriter<SentenciaCivil>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SentenciaCivil>
    READER$ = (org.apache.avro.io.DatumReader<SentenciaCivil>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.materia_sentencia);

    if (this.expediente_obliga == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.expediente_obliga);
    }

    if (this.organo_judicial_obliga == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.organo_judicial_obliga);
    }

    out.writeString(this.fallo_obliga);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.materia_sentencia = in.readString();

      if (in.readIndex() != 0) {
        in.readNull();
        this.expediente_obliga = null;
      } else {
        this.expediente_obliga = in.readString();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.organo_judicial_obliga = null;
      } else {
        this.organo_judicial_obliga = in.readString();
      }

      this.fallo_obliga = in.readString();

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.materia_sentencia = in.readString();
          break;

        case 1:
          if (in.readIndex() != 0) {
            in.readNull();
            this.expediente_obliga = null;
          } else {
            this.expediente_obliga = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 0) {
            in.readNull();
            this.organo_judicial_obliga = null;
          } else {
            this.organo_judicial_obliga = in.readString();
          }
          break;

        case 3:
          this.fallo_obliga = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










