/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package openpolitica.jne.plataformaelectoral.data;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class BienOtro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3774906127755691673L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BienOtro\",\"namespace\":\"openpolitica.jne.elecciones.data\",\"fields\":[{\"name\":\"tipo_bien\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"TXOTROBIEN\"},{\"name\":\"description\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"doc\":\"TXDESCRIPCION\"},{\"name\":\"valor\",\"type\":\"double\",\"doc\":\"FLVALOR\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<BienOtro> ENCODER =
      new BinaryMessageEncoder<BienOtro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BienOtro> DECODER =
      new BinaryMessageDecoder<BienOtro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<BienOtro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<BienOtro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<BienOtro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BienOtro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this BienOtro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a BienOtro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a BienOtro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static BienOtro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** TXOTROBIEN */
   private java.lang.String tipo_bien;
  /** TXDESCRIPCION */
   private java.lang.String description;
  /** FLVALOR */
   private double valor;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BienOtro() {}

  /**
   * All-args constructor.
   * @param tipo_bien TXOTROBIEN
   * @param description TXDESCRIPCION
   * @param valor FLVALOR
   */
  public BienOtro(java.lang.String tipo_bien, java.lang.String description, java.lang.Double valor) {
    this.tipo_bien = tipo_bien;
    this.description = description;
    this.valor = valor;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return tipo_bien;
    case 1: return description;
    case 2: return valor;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: tipo_bien = value$ != null ? value$.toString() : null; break;
    case 1: description = value$ != null ? value$.toString() : null; break;
    case 2: valor = (java.lang.Double)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'tipo_bien' field.
   * @return TXOTROBIEN
   */
  public java.lang.String getTipoBien() {
    return tipo_bien;
  }


  /**
   * Sets the value of the 'tipo_bien' field.
   * TXOTROBIEN
   * @param value the value to set.
   */
  public void setTipoBien(java.lang.String value) {
    this.tipo_bien = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return TXDESCRIPCION
   */
  public java.lang.String getDescription() {
    return description;
  }


  /**
   * Sets the value of the 'description' field.
   * TXDESCRIPCION
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'valor' field.
   * @return FLVALOR
   */
  public double getValor() {
    return valor;
  }


  /**
   * Sets the value of the 'valor' field.
   * FLVALOR
   * @param value the value to set.
   */
  public void setValor(double value) {
    this.valor = value;
  }

  /**
   * Creates a new BienOtro RecordBuilder.
   * @return A new BienOtro RecordBuilder
   */
  public static openpolitica.jne.plataformaelectoral.data.BienOtro.Builder newBuilder() {
    return new openpolitica.jne.plataformaelectoral.data.BienOtro.Builder();
  }

  /**
   * Creates a new BienOtro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BienOtro RecordBuilder
   */
  public static openpolitica.jne.plataformaelectoral.data.BienOtro.Builder newBuilder(openpolitica.jne.plataformaelectoral.data.BienOtro.Builder other) {
    if (other == null) {
      return new openpolitica.jne.plataformaelectoral.data.BienOtro.Builder();
    } else {
      return new openpolitica.jne.plataformaelectoral.data.BienOtro.Builder(other);
    }
  }

  /**
   * Creates a new BienOtro RecordBuilder by copying an existing BienOtro instance.
   * @param other The existing instance to copy.
   * @return A new BienOtro RecordBuilder
   */
  public static openpolitica.jne.plataformaelectoral.data.BienOtro.Builder newBuilder(openpolitica.jne.plataformaelectoral.data.BienOtro other) {
    if (other == null) {
      return new openpolitica.jne.plataformaelectoral.data.BienOtro.Builder();
    } else {
      return new openpolitica.jne.plataformaelectoral.data.BienOtro.Builder(other);
    }
  }

  /**
   * RecordBuilder for BienOtro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BienOtro>
    implements org.apache.avro.data.RecordBuilder<BienOtro> {

    /** TXOTROBIEN */
    private java.lang.String tipo_bien;
    /** TXDESCRIPCION */
    private java.lang.String description;
    /** FLVALOR */
    private double valor;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(openpolitica.jne.plataformaelectoral.data.BienOtro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.tipo_bien)) {
        this.tipo_bien = data().deepCopy(fields()[0].schema(), other.tipo_bien);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.valor)) {
        this.valor = data().deepCopy(fields()[2].schema(), other.valor);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing BienOtro instance
     * @param other The existing instance to copy.
     */
    private Builder(openpolitica.jne.plataformaelectoral.data.BienOtro other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.tipo_bien)) {
        this.tipo_bien = data().deepCopy(fields()[0].schema(), other.tipo_bien);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.valor)) {
        this.valor = data().deepCopy(fields()[2].schema(), other.valor);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'tipo_bien' field.
      * TXOTROBIEN
      * @return The value.
      */
    public java.lang.String getTipoBien() {
      return tipo_bien;
    }


    /**
      * Sets the value of the 'tipo_bien' field.
      * TXOTROBIEN
      * @param value The value of 'tipo_bien'.
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.BienOtro.Builder setTipoBien(java.lang.String value) {
      validate(fields()[0], value);
      this.tipo_bien = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'tipo_bien' field has been set.
      * TXOTROBIEN
      * @return True if the 'tipo_bien' field has been set, false otherwise.
      */
    public boolean hasTipoBien() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'tipo_bien' field.
      * TXOTROBIEN
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.BienOtro.Builder clearTipoBien() {
      tipo_bien = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * TXDESCRIPCION
      * @return The value.
      */
    public java.lang.String getDescription() {
      return description;
    }


    /**
      * Sets the value of the 'description' field.
      * TXDESCRIPCION
      * @param value The value of 'description'.
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.BienOtro.Builder setDescription(java.lang.String value) {
      validate(fields()[1], value);
      this.description = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * TXDESCRIPCION
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'description' field.
      * TXDESCRIPCION
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.BienOtro.Builder clearDescription() {
      description = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'valor' field.
      * FLVALOR
      * @return The value.
      */
    public double getValor() {
      return valor;
    }


    /**
      * Sets the value of the 'valor' field.
      * FLVALOR
      * @param value The value of 'valor'.
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.BienOtro.Builder setValor(double value) {
      validate(fields()[2], value);
      this.valor = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'valor' field has been set.
      * FLVALOR
      * @return True if the 'valor' field has been set, false otherwise.
      */
    public boolean hasValor() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'valor' field.
      * FLVALOR
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.BienOtro.Builder clearValor() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BienOtro build() {
      try {
        BienOtro record = new BienOtro();
        record.tipo_bien = fieldSetFlags()[0] ? this.tipo_bien : (java.lang.String) defaultValue(fields()[0]);
        record.description = fieldSetFlags()[1] ? this.description : (java.lang.String) defaultValue(fields()[1]);
        record.valor = fieldSetFlags()[2] ? this.valor : (java.lang.Double) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BienOtro>
    WRITER$ = (org.apache.avro.io.DatumWriter<BienOtro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BienOtro>
    READER$ = (org.apache.avro.io.DatumReader<BienOtro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.tipo_bien);

    if (this.description == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.description);
    }

    out.writeDouble(this.valor);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.tipo_bien = in.readString();

      if (in.readIndex() != 0) {
        in.readNull();
        this.description = null;
      } else {
        this.description = in.readString();
      }

      this.valor = in.readDouble();

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.tipo_bien = in.readString();
          break;

        case 1:
          if (in.readIndex() != 0) {
            in.readNull();
            this.description = null;
          } else {
            this.description = in.readString();
          }
          break;

        case 2:
          this.valor = in.readDouble();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










