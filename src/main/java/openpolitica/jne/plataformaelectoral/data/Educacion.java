/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package openpolitica.jne.plataformaelectoral.data;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Educacion extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2426553647251520883L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Educacion\",\"namespace\":\"openpolitica.jne.elecciones.data\",\"fields\":[{\"name\":\"basica\",\"type\":{\"type\":\"record\",\"name\":\"EducacionBasica\",\"doc\":\"Educacion Primaria, Secundaria. EDUCACIONBASICAS\",\"fields\":[{\"name\":\"tiene_basica\",\"type\":\"boolean\",\"doc\":\"SI/NO, TXTIENEBASICA\"},{\"name\":\"tiene_primaria\",\"type\":\"boolean\",\"doc\":\"SI/NO, TXTIENEPRIMARIA\"},{\"name\":\"primaria_concluida\",\"type\":\"boolean\",\"doc\":\"SI/NO, TXCONCLUYOPRIMARIA\"},{\"name\":\"tiene_secundaria\",\"type\":\"boolean\",\"doc\":\"SI/NO, TXTIENESECUNDARIA\"},{\"name\":\"secundaria_concluida\",\"type\":\"boolean\",\"doc\":\"SI/NO, TXCONCLUYOSECUNDARIA\"}]}},{\"name\":\"tecnica\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EducacionTecnica\",\"fields\":[{\"name\":\"centro_estudio\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"TXCENESTUDIOTECNICO\"},{\"name\":\"carrera\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"TXCARRERATECNICO\"},{\"name\":\"concluida\",\"type\":[\"boolean\",\"null\"],\"doc\":\"SI/NO, TXCONCLUYO\"}]}},\"doc\":\"EDUCACIONTECNICAS\"},{\"name\":\"no_universitaria\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EducacionNoUniversitaria\",\"fields\":[{\"name\":\"centro_estudio\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"TXCENTROESTUDIONOUNI\"},{\"name\":\"carrera\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"concluida\",\"type\":[\"boolean\",\"null\"]}]}},\"doc\":\"EDUCACIONNOUNIVERSITARIAS\"},{\"name\":\"universitaria\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EducacionUniversitaria\",\"fields\":[{\"name\":\"centro_estudio\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"TXUNIVERSIDAD\"},{\"name\":\"carrera\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"TXCARRERAUNI\"},{\"name\":\"concluida\",\"type\":\"boolean\",\"doc\":\"SI/NO, TXCONCLUYO\"},{\"name\":\"bachiller\",\"type\":\"boolean\",\"doc\":\"SI/NO, TXBACHILLER\"},{\"name\":\"bachiller_anio\",\"type\":[\"int\",\"null\"]},{\"name\":\"titulo\",\"type\":\"boolean\",\"doc\":\"SI/NO, TXTITULO\"},{\"name\":\"titulo_anio\",\"type\":[\"int\",\"null\"]}]}},\"doc\":\"EDUCACIONUNIVERSITARIAS\"},{\"name\":\"postgrado\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EducacionPostgrado\",\"fields\":[{\"name\":\"centro_estudio\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"TXCENESTUDIOPOSGRADO\"},{\"name\":\"especialidad\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"TXESPECIALIDADPOSGRADO\"},{\"name\":\"postgrado_anio\",\"type\":[\"int\",\"null\"]},{\"name\":\"concluida\",\"type\":[\"boolean\",\"null\"],\"doc\":\"SI/NO, TXCONCLUYO\"},{\"name\":\"egresado\",\"type\":[\"boolean\",\"null\"],\"doc\":\"SI/NO, TXEGRESADO\"}]}},\"doc\":\"EDUCACIONPOSTGRADOS\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Educacion> ENCODER =
      new BinaryMessageEncoder<Educacion>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Educacion> DECODER =
      new BinaryMessageDecoder<Educacion>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Educacion> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Educacion> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Educacion> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Educacion>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Educacion to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Educacion from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Educacion instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Educacion fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private openpolitica.jne.plataformaelectoral.data.EducacionBasica basica;
  /** EDUCACIONTECNICAS */
   private java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionTecnica> tecnica;
  /** EDUCACIONNOUNIVERSITARIAS */
   private java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria> no_universitaria;
  /** EDUCACIONUNIVERSITARIAS */
   private java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria> universitaria;
  /** EDUCACIONPOSTGRADOS */
   private java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado> postgrado;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Educacion() {}

  /**
   * All-args constructor.
   * @param basica The new value for basica
   * @param tecnica EDUCACIONTECNICAS
   * @param no_universitaria EDUCACIONNOUNIVERSITARIAS
   * @param universitaria EDUCACIONUNIVERSITARIAS
   * @param postgrado EDUCACIONPOSTGRADOS
   */
  public Educacion(openpolitica.jne.plataformaelectoral.data.EducacionBasica basica, java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionTecnica> tecnica, java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria> no_universitaria, java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria> universitaria, java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado> postgrado) {
    this.basica = basica;
    this.tecnica = tecnica;
    this.no_universitaria = no_universitaria;
    this.universitaria = universitaria;
    this.postgrado = postgrado;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return basica;
    case 1: return tecnica;
    case 2: return no_universitaria;
    case 3: return universitaria;
    case 4: return postgrado;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: basica = (openpolitica.jne.plataformaelectoral.data.EducacionBasica)value$; break;
    case 1: tecnica = (java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionTecnica>)value$; break;
    case 2: no_universitaria = (java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria>)value$; break;
    case 3: universitaria = (java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria>)value$; break;
    case 4: postgrado = (java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'basica' field.
   * @return The value of the 'basica' field.
   */
  public openpolitica.jne.plataformaelectoral.data.EducacionBasica getBasica() {
    return basica;
  }


  /**
   * Sets the value of the 'basica' field.
   * @param value the value to set.
   */
  public void setBasica(openpolitica.jne.plataformaelectoral.data.EducacionBasica value) {
    this.basica = value;
  }

  /**
   * Gets the value of the 'tecnica' field.
   * @return EDUCACIONTECNICAS
   */
  public java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionTecnica> getTecnica() {
    return tecnica;
  }


  /**
   * Sets the value of the 'tecnica' field.
   * EDUCACIONTECNICAS
   * @param value the value to set.
   */
  public void setTecnica(java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionTecnica> value) {
    this.tecnica = value;
  }

  /**
   * Gets the value of the 'no_universitaria' field.
   * @return EDUCACIONNOUNIVERSITARIAS
   */
  public java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria> getNoUniversitaria() {
    return no_universitaria;
  }


  /**
   * Sets the value of the 'no_universitaria' field.
   * EDUCACIONNOUNIVERSITARIAS
   * @param value the value to set.
   */
  public void setNoUniversitaria(java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria> value) {
    this.no_universitaria = value;
  }

  /**
   * Gets the value of the 'universitaria' field.
   * @return EDUCACIONUNIVERSITARIAS
   */
  public java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria> getUniversitaria() {
    return universitaria;
  }


  /**
   * Sets the value of the 'universitaria' field.
   * EDUCACIONUNIVERSITARIAS
   * @param value the value to set.
   */
  public void setUniversitaria(java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria> value) {
    this.universitaria = value;
  }

  /**
   * Gets the value of the 'postgrado' field.
   * @return EDUCACIONPOSTGRADOS
   */
  public java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado> getPostgrado() {
    return postgrado;
  }


  /**
   * Sets the value of the 'postgrado' field.
   * EDUCACIONPOSTGRADOS
   * @param value the value to set.
   */
  public void setPostgrado(java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado> value) {
    this.postgrado = value;
  }

  /**
   * Creates a new Educacion RecordBuilder.
   * @return A new Educacion RecordBuilder
   */
  public static openpolitica.jne.plataformaelectoral.data.Educacion.Builder newBuilder() {
    return new openpolitica.jne.plataformaelectoral.data.Educacion.Builder();
  }

  /**
   * Creates a new Educacion RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Educacion RecordBuilder
   */
  public static openpolitica.jne.plataformaelectoral.data.Educacion.Builder newBuilder(openpolitica.jne.plataformaelectoral.data.Educacion.Builder other) {
    if (other == null) {
      return new openpolitica.jne.plataformaelectoral.data.Educacion.Builder();
    } else {
      return new openpolitica.jne.plataformaelectoral.data.Educacion.Builder(other);
    }
  }

  /**
   * Creates a new Educacion RecordBuilder by copying an existing Educacion instance.
   * @param other The existing instance to copy.
   * @return A new Educacion RecordBuilder
   */
  public static openpolitica.jne.plataformaelectoral.data.Educacion.Builder newBuilder(openpolitica.jne.plataformaelectoral.data.Educacion other) {
    if (other == null) {
      return new openpolitica.jne.plataformaelectoral.data.Educacion.Builder();
    } else {
      return new openpolitica.jne.plataformaelectoral.data.Educacion.Builder(other);
    }
  }

  /**
   * RecordBuilder for Educacion instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Educacion>
    implements org.apache.avro.data.RecordBuilder<Educacion> {

    private openpolitica.jne.plataformaelectoral.data.EducacionBasica basica;
    private openpolitica.jne.plataformaelectoral.data.EducacionBasica.Builder basicaBuilder;
    /** EDUCACIONTECNICAS */
    private java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionTecnica> tecnica;
    /** EDUCACIONNOUNIVERSITARIAS */
    private java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria> no_universitaria;
    /** EDUCACIONUNIVERSITARIAS */
    private java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria> universitaria;
    /** EDUCACIONPOSTGRADOS */
    private java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado> postgrado;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(openpolitica.jne.plataformaelectoral.data.Educacion.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.basica)) {
        this.basica = data().deepCopy(fields()[0].schema(), other.basica);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasBasicaBuilder()) {
        this.basicaBuilder = openpolitica.jne.plataformaelectoral.data.EducacionBasica.newBuilder(other.getBasicaBuilder());
      }
      if (isValidValue(fields()[1], other.tecnica)) {
        this.tecnica = data().deepCopy(fields()[1].schema(), other.tecnica);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.no_universitaria)) {
        this.no_universitaria = data().deepCopy(fields()[2].schema(), other.no_universitaria);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.universitaria)) {
        this.universitaria = data().deepCopy(fields()[3].schema(), other.universitaria);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.postgrado)) {
        this.postgrado = data().deepCopy(fields()[4].schema(), other.postgrado);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing Educacion instance
     * @param other The existing instance to copy.
     */
    private Builder(openpolitica.jne.plataformaelectoral.data.Educacion other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.basica)) {
        this.basica = data().deepCopy(fields()[0].schema(), other.basica);
        fieldSetFlags()[0] = true;
      }
      this.basicaBuilder = null;
      if (isValidValue(fields()[1], other.tecnica)) {
        this.tecnica = data().deepCopy(fields()[1].schema(), other.tecnica);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.no_universitaria)) {
        this.no_universitaria = data().deepCopy(fields()[2].schema(), other.no_universitaria);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.universitaria)) {
        this.universitaria = data().deepCopy(fields()[3].schema(), other.universitaria);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.postgrado)) {
        this.postgrado = data().deepCopy(fields()[4].schema(), other.postgrado);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'basica' field.
      * @return The value.
      */
    public openpolitica.jne.plataformaelectoral.data.EducacionBasica getBasica() {
      return basica;
    }


    /**
      * Sets the value of the 'basica' field.
      * @param value The value of 'basica'.
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.Educacion.Builder setBasica(openpolitica.jne.plataformaelectoral.data.EducacionBasica value) {
      validate(fields()[0], value);
      this.basicaBuilder = null;
      this.basica = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'basica' field has been set.
      * @return True if the 'basica' field has been set, false otherwise.
      */
    public boolean hasBasica() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'basica' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public openpolitica.jne.plataformaelectoral.data.EducacionBasica.Builder getBasicaBuilder() {
      if (basicaBuilder == null) {
        if (hasBasica()) {
          setBasicaBuilder(openpolitica.jne.plataformaelectoral.data.EducacionBasica.newBuilder(basica));
        } else {
          setBasicaBuilder(openpolitica.jne.plataformaelectoral.data.EducacionBasica.newBuilder());
        }
      }
      return basicaBuilder;
    }

    /**
     * Sets the Builder instance for the 'basica' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public openpolitica.jne.plataformaelectoral.data.Educacion.Builder setBasicaBuilder(openpolitica.jne.plataformaelectoral.data.EducacionBasica.Builder value) {
      clearBasica();
      basicaBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'basica' field has an active Builder instance
     * @return True if the 'basica' field has an active Builder instance
     */
    public boolean hasBasicaBuilder() {
      return basicaBuilder != null;
    }

    /**
      * Clears the value of the 'basica' field.
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.Educacion.Builder clearBasica() {
      basica = null;
      basicaBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'tecnica' field.
      * EDUCACIONTECNICAS
      * @return The value.
      */
    public java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionTecnica> getTecnica() {
      return tecnica;
    }


    /**
      * Sets the value of the 'tecnica' field.
      * EDUCACIONTECNICAS
      * @param value The value of 'tecnica'.
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.Educacion.Builder setTecnica(java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionTecnica> value) {
      validate(fields()[1], value);
      this.tecnica = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'tecnica' field has been set.
      * EDUCACIONTECNICAS
      * @return True if the 'tecnica' field has been set, false otherwise.
      */
    public boolean hasTecnica() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'tecnica' field.
      * EDUCACIONTECNICAS
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.Educacion.Builder clearTecnica() {
      tecnica = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'no_universitaria' field.
      * EDUCACIONNOUNIVERSITARIAS
      * @return The value.
      */
    public java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria> getNoUniversitaria() {
      return no_universitaria;
    }


    /**
      * Sets the value of the 'no_universitaria' field.
      * EDUCACIONNOUNIVERSITARIAS
      * @param value The value of 'no_universitaria'.
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.Educacion.Builder setNoUniversitaria(java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria> value) {
      validate(fields()[2], value);
      this.no_universitaria = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'no_universitaria' field has been set.
      * EDUCACIONNOUNIVERSITARIAS
      * @return True if the 'no_universitaria' field has been set, false otherwise.
      */
    public boolean hasNoUniversitaria() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'no_universitaria' field.
      * EDUCACIONNOUNIVERSITARIAS
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.Educacion.Builder clearNoUniversitaria() {
      no_universitaria = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'universitaria' field.
      * EDUCACIONUNIVERSITARIAS
      * @return The value.
      */
    public java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria> getUniversitaria() {
      return universitaria;
    }


    /**
      * Sets the value of the 'universitaria' field.
      * EDUCACIONUNIVERSITARIAS
      * @param value The value of 'universitaria'.
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.Educacion.Builder setUniversitaria(java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria> value) {
      validate(fields()[3], value);
      this.universitaria = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'universitaria' field has been set.
      * EDUCACIONUNIVERSITARIAS
      * @return True if the 'universitaria' field has been set, false otherwise.
      */
    public boolean hasUniversitaria() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'universitaria' field.
      * EDUCACIONUNIVERSITARIAS
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.Educacion.Builder clearUniversitaria() {
      universitaria = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'postgrado' field.
      * EDUCACIONPOSTGRADOS
      * @return The value.
      */
    public java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado> getPostgrado() {
      return postgrado;
    }


    /**
      * Sets the value of the 'postgrado' field.
      * EDUCACIONPOSTGRADOS
      * @param value The value of 'postgrado'.
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.Educacion.Builder setPostgrado(java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado> value) {
      validate(fields()[4], value);
      this.postgrado = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'postgrado' field has been set.
      * EDUCACIONPOSTGRADOS
      * @return True if the 'postgrado' field has been set, false otherwise.
      */
    public boolean hasPostgrado() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'postgrado' field.
      * EDUCACIONPOSTGRADOS
      * @return This builder.
      */
    public openpolitica.jne.plataformaelectoral.data.Educacion.Builder clearPostgrado() {
      postgrado = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Educacion build() {
      try {
        Educacion record = new Educacion();
        if (basicaBuilder != null) {
          try {
            record.basica = this.basicaBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("basica"));
            throw e;
          }
        } else {
          record.basica = fieldSetFlags()[0] ? this.basica : (openpolitica.jne.plataformaelectoral.data.EducacionBasica) defaultValue(fields()[0]);
        }
        record.tecnica = fieldSetFlags()[1] ? this.tecnica : (java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionTecnica>) defaultValue(fields()[1]);
        record.no_universitaria = fieldSetFlags()[2] ? this.no_universitaria : (java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria>) defaultValue(fields()[2]);
        record.universitaria = fieldSetFlags()[3] ? this.universitaria : (java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria>) defaultValue(fields()[3]);
        record.postgrado = fieldSetFlags()[4] ? this.postgrado : (java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado>) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Educacion>
    WRITER$ = (org.apache.avro.io.DatumWriter<Educacion>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Educacion>
    READER$ = (org.apache.avro.io.DatumReader<Educacion>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.basica.customEncode(out);

    long size0 = this.tecnica.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (openpolitica.jne.plataformaelectoral.data.EducacionTecnica e0: this.tecnica) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    long size1 = this.no_universitaria.size();
    out.writeArrayStart();
    out.setItemCount(size1);
    long actualSize1 = 0;
    for (openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria e1: this.no_universitaria) {
      actualSize1++;
      out.startItem();
      e1.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize1 != size1)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");

    long size2 = this.universitaria.size();
    out.writeArrayStart();
    out.setItemCount(size2);
    long actualSize2 = 0;
    for (openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria e2: this.universitaria) {
      actualSize2++;
      out.startItem();
      e2.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize2 != size2)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size2 + ", but element count was " + actualSize2 + ".");

    long size3 = this.postgrado.size();
    out.writeArrayStart();
    out.setItemCount(size3);
    long actualSize3 = 0;
    for (openpolitica.jne.plataformaelectoral.data.EducacionPostgrado e3: this.postgrado) {
      actualSize3++;
      out.startItem();
      e3.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize3 != size3)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size3 + ", but element count was " + actualSize3 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.basica == null) {
        this.basica = new openpolitica.jne.plataformaelectoral.data.EducacionBasica();
      }
      this.basica.customDecode(in);

      long size0 = in.readArrayStart();
      java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionTecnica> a0 = this.tecnica;
      if (a0 == null) {
        a0 = new SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionTecnica>((int)size0, SCHEMA$.getField("tecnica").schema());
        this.tecnica = a0;
      } else a0.clear();
      SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionTecnica> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionTecnica>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          openpolitica.jne.plataformaelectoral.data.EducacionTecnica e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new openpolitica.jne.plataformaelectoral.data.EducacionTecnica();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

      long size1 = in.readArrayStart();
      java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria> a1 = this.no_universitaria;
      if (a1 == null) {
        a1 = new SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria>((int)size1, SCHEMA$.getField("no_universitaria").schema());
        this.no_universitaria = a1;
      } else a1.clear();
      SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria>)a1 : null);
      for ( ; 0 < size1; size1 = in.arrayNext()) {
        for ( ; size1 != 0; size1--) {
          openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria e1 = (ga1 != null ? ga1.peek() : null);
          if (e1 == null) {
            e1 = new openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria();
          }
          e1.customDecode(in);
          a1.add(e1);
        }
      }

      long size2 = in.readArrayStart();
      java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria> a2 = this.universitaria;
      if (a2 == null) {
        a2 = new SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria>((int)size2, SCHEMA$.getField("universitaria").schema());
        this.universitaria = a2;
      } else a2.clear();
      SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria>)a2 : null);
      for ( ; 0 < size2; size2 = in.arrayNext()) {
        for ( ; size2 != 0; size2--) {
          openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria e2 = (ga2 != null ? ga2.peek() : null);
          if (e2 == null) {
            e2 = new openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria();
          }
          e2.customDecode(in);
          a2.add(e2);
        }
      }

      long size3 = in.readArrayStart();
      java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado> a3 = this.postgrado;
      if (a3 == null) {
        a3 = new SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado>((int)size3, SCHEMA$.getField("postgrado").schema());
        this.postgrado = a3;
      } else a3.clear();
      SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado>)a3 : null);
      for ( ; 0 < size3; size3 = in.arrayNext()) {
        for ( ; size3 != 0; size3--) {
          openpolitica.jne.plataformaelectoral.data.EducacionPostgrado e3 = (ga3 != null ? ga3.peek() : null);
          if (e3 == null) {
            e3 = new openpolitica.jne.plataformaelectoral.data.EducacionPostgrado();
          }
          e3.customDecode(in);
          a3.add(e3);
        }
      }

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.basica == null) {
            this.basica = new openpolitica.jne.plataformaelectoral.data.EducacionBasica();
          }
          this.basica.customDecode(in);
          break;

        case 1:
          long size0 = in.readArrayStart();
          java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionTecnica> a0 = this.tecnica;
          if (a0 == null) {
            a0 = new SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionTecnica>((int)size0, SCHEMA$.getField("tecnica").schema());
            this.tecnica = a0;
          } else a0.clear();
          SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionTecnica> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionTecnica>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              openpolitica.jne.plataformaelectoral.data.EducacionTecnica e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new openpolitica.jne.plataformaelectoral.data.EducacionTecnica();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        case 2:
          long size1 = in.readArrayStart();
          java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria> a1 = this.no_universitaria;
          if (a1 == null) {
            a1 = new SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria>((int)size1, SCHEMA$.getField("no_universitaria").schema());
            this.no_universitaria = a1;
          } else a1.clear();
          SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria>)a1 : null);
          for ( ; 0 < size1; size1 = in.arrayNext()) {
            for ( ; size1 != 0; size1--) {
              openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria e1 = (ga1 != null ? ga1.peek() : null);
              if (e1 == null) {
                e1 = new openpolitica.jne.plataformaelectoral.data.EducacionNoUniversitaria();
              }
              e1.customDecode(in);
              a1.add(e1);
            }
          }
          break;

        case 3:
          long size2 = in.readArrayStart();
          java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria> a2 = this.universitaria;
          if (a2 == null) {
            a2 = new SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria>((int)size2, SCHEMA$.getField("universitaria").schema());
            this.universitaria = a2;
          } else a2.clear();
          SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria>)a2 : null);
          for ( ; 0 < size2; size2 = in.arrayNext()) {
            for ( ; size2 != 0; size2--) {
              openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria e2 = (ga2 != null ? ga2.peek() : null);
              if (e2 == null) {
                e2 = new openpolitica.jne.plataformaelectoral.data.EducacionUniversitaria();
              }
              e2.customDecode(in);
              a2.add(e2);
            }
          }
          break;

        case 4:
          long size3 = in.readArrayStart();
          java.util.List<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado> a3 = this.postgrado;
          if (a3 == null) {
            a3 = new SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado>((int)size3, SCHEMA$.getField("postgrado").schema());
            this.postgrado = a3;
          } else a3.clear();
          SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<openpolitica.jne.plataformaelectoral.data.EducacionPostgrado>)a3 : null);
          for ( ; 0 < size3; size3 = in.arrayNext()) {
            for ( ; size3 != 0; size3--) {
              openpolitica.jne.plataformaelectoral.data.EducacionPostgrado e3 = (ga3 != null ? ga3.peek() : null);
              if (e3 == null) {
                e3 = new openpolitica.jne.plataformaelectoral.data.EducacionPostgrado();
              }
              e3.customDecode(in);
              a3.add(e3);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










