/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package openpolitica.jne.infogob.data;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ProcesoElectoral extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6306924863887642021L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProcesoElectoral\",\"namespace\":\"openpolitica.jne.infogob.data\",\"fields\":[{\"name\":\"proceso_electoral\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"cargo_postulo\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"org_politica\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"circunscripcion\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"elegido\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ProcesoElectoral> ENCODER =
      new BinaryMessageEncoder<ProcesoElectoral>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ProcesoElectoral> DECODER =
      new BinaryMessageDecoder<ProcesoElectoral>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ProcesoElectoral> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ProcesoElectoral> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ProcesoElectoral> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ProcesoElectoral>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ProcesoElectoral to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ProcesoElectoral from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ProcesoElectoral instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ProcesoElectoral fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String proceso_electoral;
   private java.lang.String cargo_postulo;
   private java.lang.String org_politica;
   private java.lang.String circunscripcion;
   private java.lang.String elegido;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ProcesoElectoral() {}

  /**
   * All-args constructor.
   * @param proceso_electoral The new value for proceso_electoral
   * @param cargo_postulo The new value for cargo_postulo
   * @param org_politica The new value for org_politica
   * @param circunscripcion The new value for circunscripcion
   * @param elegido The new value for elegido
   */
  public ProcesoElectoral(java.lang.String proceso_electoral, java.lang.String cargo_postulo, java.lang.String org_politica, java.lang.String circunscripcion, java.lang.String elegido) {
    this.proceso_electoral = proceso_electoral;
    this.cargo_postulo = cargo_postulo;
    this.org_politica = org_politica;
    this.circunscripcion = circunscripcion;
    this.elegido = elegido;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return proceso_electoral;
    case 1: return cargo_postulo;
    case 2: return org_politica;
    case 3: return circunscripcion;
    case 4: return elegido;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: proceso_electoral = value$ != null ? value$.toString() : null; break;
    case 1: cargo_postulo = value$ != null ? value$.toString() : null; break;
    case 2: org_politica = value$ != null ? value$.toString() : null; break;
    case 3: circunscripcion = value$ != null ? value$.toString() : null; break;
    case 4: elegido = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'proceso_electoral' field.
   * @return The value of the 'proceso_electoral' field.
   */
  public java.lang.String getProcesoElectoral() {
    return proceso_electoral;
  }


  /**
   * Sets the value of the 'proceso_electoral' field.
   * @param value the value to set.
   */
  public void setProcesoElectoral(java.lang.String value) {
    this.proceso_electoral = value;
  }

  /**
   * Gets the value of the 'cargo_postulo' field.
   * @return The value of the 'cargo_postulo' field.
   */
  public java.lang.String getCargoPostulo() {
    return cargo_postulo;
  }


  /**
   * Sets the value of the 'cargo_postulo' field.
   * @param value the value to set.
   */
  public void setCargoPostulo(java.lang.String value) {
    this.cargo_postulo = value;
  }

  /**
   * Gets the value of the 'org_politica' field.
   * @return The value of the 'org_politica' field.
   */
  public java.lang.String getOrgPolitica() {
    return org_politica;
  }


  /**
   * Sets the value of the 'org_politica' field.
   * @param value the value to set.
   */
  public void setOrgPolitica(java.lang.String value) {
    this.org_politica = value;
  }

  /**
   * Gets the value of the 'circunscripcion' field.
   * @return The value of the 'circunscripcion' field.
   */
  public java.lang.String getCircunscripcion() {
    return circunscripcion;
  }


  /**
   * Sets the value of the 'circunscripcion' field.
   * @param value the value to set.
   */
  public void setCircunscripcion(java.lang.String value) {
    this.circunscripcion = value;
  }

  /**
   * Gets the value of the 'elegido' field.
   * @return The value of the 'elegido' field.
   */
  public java.lang.String getElegido() {
    return elegido;
  }


  /**
   * Sets the value of the 'elegido' field.
   * @param value the value to set.
   */
  public void setElegido(java.lang.String value) {
    this.elegido = value;
  }

  /**
   * Creates a new ProcesoElectoral RecordBuilder.
   * @return A new ProcesoElectoral RecordBuilder
   */
  public static openpolitica.jne.infogob.data.ProcesoElectoral.Builder newBuilder() {
    return new openpolitica.jne.infogob.data.ProcesoElectoral.Builder();
  }

  /**
   * Creates a new ProcesoElectoral RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ProcesoElectoral RecordBuilder
   */
  public static openpolitica.jne.infogob.data.ProcesoElectoral.Builder newBuilder(openpolitica.jne.infogob.data.ProcesoElectoral.Builder other) {
    if (other == null) {
      return new openpolitica.jne.infogob.data.ProcesoElectoral.Builder();
    } else {
      return new openpolitica.jne.infogob.data.ProcesoElectoral.Builder(other);
    }
  }

  /**
   * Creates a new ProcesoElectoral RecordBuilder by copying an existing ProcesoElectoral instance.
   * @param other The existing instance to copy.
   * @return A new ProcesoElectoral RecordBuilder
   */
  public static openpolitica.jne.infogob.data.ProcesoElectoral.Builder newBuilder(openpolitica.jne.infogob.data.ProcesoElectoral other) {
    if (other == null) {
      return new openpolitica.jne.infogob.data.ProcesoElectoral.Builder();
    } else {
      return new openpolitica.jne.infogob.data.ProcesoElectoral.Builder(other);
    }
  }

  /**
   * RecordBuilder for ProcesoElectoral instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProcesoElectoral>
    implements org.apache.avro.data.RecordBuilder<ProcesoElectoral> {

    private java.lang.String proceso_electoral;
    private java.lang.String cargo_postulo;
    private java.lang.String org_politica;
    private java.lang.String circunscripcion;
    private java.lang.String elegido;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(openpolitica.jne.infogob.data.ProcesoElectoral.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.proceso_electoral)) {
        this.proceso_electoral = data().deepCopy(fields()[0].schema(), other.proceso_electoral);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.cargo_postulo)) {
        this.cargo_postulo = data().deepCopy(fields()[1].schema(), other.cargo_postulo);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.org_politica)) {
        this.org_politica = data().deepCopy(fields()[2].schema(), other.org_politica);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.circunscripcion)) {
        this.circunscripcion = data().deepCopy(fields()[3].schema(), other.circunscripcion);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.elegido)) {
        this.elegido = data().deepCopy(fields()[4].schema(), other.elegido);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing ProcesoElectoral instance
     * @param other The existing instance to copy.
     */
    private Builder(openpolitica.jne.infogob.data.ProcesoElectoral other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.proceso_electoral)) {
        this.proceso_electoral = data().deepCopy(fields()[0].schema(), other.proceso_electoral);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.cargo_postulo)) {
        this.cargo_postulo = data().deepCopy(fields()[1].schema(), other.cargo_postulo);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.org_politica)) {
        this.org_politica = data().deepCopy(fields()[2].schema(), other.org_politica);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.circunscripcion)) {
        this.circunscripcion = data().deepCopy(fields()[3].schema(), other.circunscripcion);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.elegido)) {
        this.elegido = data().deepCopy(fields()[4].schema(), other.elegido);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'proceso_electoral' field.
      * @return The value.
      */
    public java.lang.String getProcesoElectoral() {
      return proceso_electoral;
    }


    /**
      * Sets the value of the 'proceso_electoral' field.
      * @param value The value of 'proceso_electoral'.
      * @return This builder.
      */
    public openpolitica.jne.infogob.data.ProcesoElectoral.Builder setProcesoElectoral(java.lang.String value) {
      validate(fields()[0], value);
      this.proceso_electoral = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'proceso_electoral' field has been set.
      * @return True if the 'proceso_electoral' field has been set, false otherwise.
      */
    public boolean hasProcesoElectoral() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'proceso_electoral' field.
      * @return This builder.
      */
    public openpolitica.jne.infogob.data.ProcesoElectoral.Builder clearProcesoElectoral() {
      proceso_electoral = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'cargo_postulo' field.
      * @return The value.
      */
    public java.lang.String getCargoPostulo() {
      return cargo_postulo;
    }


    /**
      * Sets the value of the 'cargo_postulo' field.
      * @param value The value of 'cargo_postulo'.
      * @return This builder.
      */
    public openpolitica.jne.infogob.data.ProcesoElectoral.Builder setCargoPostulo(java.lang.String value) {
      validate(fields()[1], value);
      this.cargo_postulo = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'cargo_postulo' field has been set.
      * @return True if the 'cargo_postulo' field has been set, false otherwise.
      */
    public boolean hasCargoPostulo() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'cargo_postulo' field.
      * @return This builder.
      */
    public openpolitica.jne.infogob.data.ProcesoElectoral.Builder clearCargoPostulo() {
      cargo_postulo = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'org_politica' field.
      * @return The value.
      */
    public java.lang.String getOrgPolitica() {
      return org_politica;
    }


    /**
      * Sets the value of the 'org_politica' field.
      * @param value The value of 'org_politica'.
      * @return This builder.
      */
    public openpolitica.jne.infogob.data.ProcesoElectoral.Builder setOrgPolitica(java.lang.String value) {
      validate(fields()[2], value);
      this.org_politica = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'org_politica' field has been set.
      * @return True if the 'org_politica' field has been set, false otherwise.
      */
    public boolean hasOrgPolitica() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'org_politica' field.
      * @return This builder.
      */
    public openpolitica.jne.infogob.data.ProcesoElectoral.Builder clearOrgPolitica() {
      org_politica = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'circunscripcion' field.
      * @return The value.
      */
    public java.lang.String getCircunscripcion() {
      return circunscripcion;
    }


    /**
      * Sets the value of the 'circunscripcion' field.
      * @param value The value of 'circunscripcion'.
      * @return This builder.
      */
    public openpolitica.jne.infogob.data.ProcesoElectoral.Builder setCircunscripcion(java.lang.String value) {
      validate(fields()[3], value);
      this.circunscripcion = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'circunscripcion' field has been set.
      * @return True if the 'circunscripcion' field has been set, false otherwise.
      */
    public boolean hasCircunscripcion() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'circunscripcion' field.
      * @return This builder.
      */
    public openpolitica.jne.infogob.data.ProcesoElectoral.Builder clearCircunscripcion() {
      circunscripcion = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'elegido' field.
      * @return The value.
      */
    public java.lang.String getElegido() {
      return elegido;
    }


    /**
      * Sets the value of the 'elegido' field.
      * @param value The value of 'elegido'.
      * @return This builder.
      */
    public openpolitica.jne.infogob.data.ProcesoElectoral.Builder setElegido(java.lang.String value) {
      validate(fields()[4], value);
      this.elegido = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'elegido' field has been set.
      * @return True if the 'elegido' field has been set, false otherwise.
      */
    public boolean hasElegido() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'elegido' field.
      * @return This builder.
      */
    public openpolitica.jne.infogob.data.ProcesoElectoral.Builder clearElegido() {
      elegido = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ProcesoElectoral build() {
      try {
        ProcesoElectoral record = new ProcesoElectoral();
        record.proceso_electoral = fieldSetFlags()[0] ? this.proceso_electoral : (java.lang.String) defaultValue(fields()[0]);
        record.cargo_postulo = fieldSetFlags()[1] ? this.cargo_postulo : (java.lang.String) defaultValue(fields()[1]);
        record.org_politica = fieldSetFlags()[2] ? this.org_politica : (java.lang.String) defaultValue(fields()[2]);
        record.circunscripcion = fieldSetFlags()[3] ? this.circunscripcion : (java.lang.String) defaultValue(fields()[3]);
        record.elegido = fieldSetFlags()[4] ? this.elegido : (java.lang.String) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ProcesoElectoral>
    WRITER$ = (org.apache.avro.io.DatumWriter<ProcesoElectoral>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ProcesoElectoral>
    READER$ = (org.apache.avro.io.DatumReader<ProcesoElectoral>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.proceso_electoral);

    out.writeString(this.cargo_postulo);

    out.writeString(this.org_politica);

    out.writeString(this.circunscripcion);

    out.writeString(this.elegido);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.proceso_electoral = in.readString();

      this.cargo_postulo = in.readString();

      this.org_politica = in.readString();

      this.circunscripcion = in.readString();

      this.elegido = in.readString();

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.proceso_electoral = in.readString();
          break;

        case 1:
          this.cargo_postulo = in.readString();
          break;

        case 2:
          this.org_politica = in.readString();
          break;

        case 3:
          this.circunscripcion = in.readString();
          break;

        case 4:
          this.elegido = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










