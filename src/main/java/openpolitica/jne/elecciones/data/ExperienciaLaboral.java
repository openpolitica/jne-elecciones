/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package openpolitica.jne.elecciones.data;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ExperienciaLaboral extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2268098808805725670L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ExperienciaLaboral\",\"namespace\":\"openpolitica.jne.elecciones.data\",\"fields\":[{\"name\":\"item\",\"type\":\"int\"},{\"name\":\"centro_trabajo\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"TXCENTROTRABAJO\"},{\"name\":\"ocupacion_profesion\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"TXOCUPACIONPROFESION\"},{\"name\":\"anio_desde\",\"type\":[\"int\",\"null\"],\"doc\":\"TXANIOTRABAJODESDE\"},{\"name\":\"anio_hasta\",\"type\":[\"int\",\"null\"],\"doc\":\"TXANIOTRABAJOHASTA\"},{\"name\":\"hasta_actualidad\",\"type\":\"boolean\"},{\"name\":\"ubicacion_pais\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ubicacion_departamento\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ubicacion_provincia\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ubicacion_distrito\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ubicacion_direccion\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ruc\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ExperienciaLaboral> ENCODER =
      new BinaryMessageEncoder<ExperienciaLaboral>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ExperienciaLaboral> DECODER =
      new BinaryMessageDecoder<ExperienciaLaboral>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ExperienciaLaboral> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ExperienciaLaboral> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ExperienciaLaboral> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ExperienciaLaboral>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ExperienciaLaboral to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ExperienciaLaboral from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ExperienciaLaboral instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ExperienciaLaboral fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private int item;
  /** TXCENTROTRABAJO */
   private java.lang.String centro_trabajo;
  /** TXOCUPACIONPROFESION */
   private java.lang.String ocupacion_profesion;
  /** TXANIOTRABAJODESDE */
   private java.lang.Integer anio_desde;
  /** TXANIOTRABAJOHASTA */
   private java.lang.Integer anio_hasta;
   private boolean hasta_actualidad;
   private java.lang.String ubicacion_pais;
   private java.lang.String ubicacion_departamento;
   private java.lang.String ubicacion_provincia;
   private java.lang.String ubicacion_distrito;
   private java.lang.String ubicacion_direccion;
   private java.lang.String ruc;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ExperienciaLaboral() {}

  /**
   * All-args constructor.
   * @param item The new value for item
   * @param centro_trabajo TXCENTROTRABAJO
   * @param ocupacion_profesion TXOCUPACIONPROFESION
   * @param anio_desde TXANIOTRABAJODESDE
   * @param anio_hasta TXANIOTRABAJOHASTA
   * @param hasta_actualidad The new value for hasta_actualidad
   * @param ubicacion_pais The new value for ubicacion_pais
   * @param ubicacion_departamento The new value for ubicacion_departamento
   * @param ubicacion_provincia The new value for ubicacion_provincia
   * @param ubicacion_distrito The new value for ubicacion_distrito
   * @param ubicacion_direccion The new value for ubicacion_direccion
   * @param ruc The new value for ruc
   */
  public ExperienciaLaboral(java.lang.Integer item, java.lang.String centro_trabajo, java.lang.String ocupacion_profesion, java.lang.Integer anio_desde, java.lang.Integer anio_hasta, java.lang.Boolean hasta_actualidad, java.lang.String ubicacion_pais, java.lang.String ubicacion_departamento, java.lang.String ubicacion_provincia, java.lang.String ubicacion_distrito, java.lang.String ubicacion_direccion, java.lang.String ruc) {
    this.item = item;
    this.centro_trabajo = centro_trabajo;
    this.ocupacion_profesion = ocupacion_profesion;
    this.anio_desde = anio_desde;
    this.anio_hasta = anio_hasta;
    this.hasta_actualidad = hasta_actualidad;
    this.ubicacion_pais = ubicacion_pais;
    this.ubicacion_departamento = ubicacion_departamento;
    this.ubicacion_provincia = ubicacion_provincia;
    this.ubicacion_distrito = ubicacion_distrito;
    this.ubicacion_direccion = ubicacion_direccion;
    this.ruc = ruc;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return item;
    case 1: return centro_trabajo;
    case 2: return ocupacion_profesion;
    case 3: return anio_desde;
    case 4: return anio_hasta;
    case 5: return hasta_actualidad;
    case 6: return ubicacion_pais;
    case 7: return ubicacion_departamento;
    case 8: return ubicacion_provincia;
    case 9: return ubicacion_distrito;
    case 10: return ubicacion_direccion;
    case 11: return ruc;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: item = (java.lang.Integer)value$; break;
    case 1: centro_trabajo = value$ != null ? value$.toString() : null; break;
    case 2: ocupacion_profesion = value$ != null ? value$.toString() : null; break;
    case 3: anio_desde = (java.lang.Integer)value$; break;
    case 4: anio_hasta = (java.lang.Integer)value$; break;
    case 5: hasta_actualidad = (java.lang.Boolean)value$; break;
    case 6: ubicacion_pais = value$ != null ? value$.toString() : null; break;
    case 7: ubicacion_departamento = value$ != null ? value$.toString() : null; break;
    case 8: ubicacion_provincia = value$ != null ? value$.toString() : null; break;
    case 9: ubicacion_distrito = value$ != null ? value$.toString() : null; break;
    case 10: ubicacion_direccion = value$ != null ? value$.toString() : null; break;
    case 11: ruc = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'item' field.
   * @return The value of the 'item' field.
   */
  public int getItem() {
    return item;
  }


  /**
   * Sets the value of the 'item' field.
   * @param value the value to set.
   */
  public void setItem(int value) {
    this.item = value;
  }

  /**
   * Gets the value of the 'centro_trabajo' field.
   * @return TXCENTROTRABAJO
   */
  public java.lang.String getCentroTrabajo() {
    return centro_trabajo;
  }


  /**
   * Sets the value of the 'centro_trabajo' field.
   * TXCENTROTRABAJO
   * @param value the value to set.
   */
  public void setCentroTrabajo(java.lang.String value) {
    this.centro_trabajo = value;
  }

  /**
   * Gets the value of the 'ocupacion_profesion' field.
   * @return TXOCUPACIONPROFESION
   */
  public java.lang.String getOcupacionProfesion() {
    return ocupacion_profesion;
  }


  /**
   * Sets the value of the 'ocupacion_profesion' field.
   * TXOCUPACIONPROFESION
   * @param value the value to set.
   */
  public void setOcupacionProfesion(java.lang.String value) {
    this.ocupacion_profesion = value;
  }

  /**
   * Gets the value of the 'anio_desde' field.
   * @return TXANIOTRABAJODESDE
   */
  public java.lang.Integer getAnioDesde() {
    return anio_desde;
  }


  /**
   * Sets the value of the 'anio_desde' field.
   * TXANIOTRABAJODESDE
   * @param value the value to set.
   */
  public void setAnioDesde(java.lang.Integer value) {
    this.anio_desde = value;
  }

  /**
   * Gets the value of the 'anio_hasta' field.
   * @return TXANIOTRABAJOHASTA
   */
  public java.lang.Integer getAnioHasta() {
    return anio_hasta;
  }


  /**
   * Sets the value of the 'anio_hasta' field.
   * TXANIOTRABAJOHASTA
   * @param value the value to set.
   */
  public void setAnioHasta(java.lang.Integer value) {
    this.anio_hasta = value;
  }

  /**
   * Gets the value of the 'hasta_actualidad' field.
   * @return The value of the 'hasta_actualidad' field.
   */
  public boolean getHastaActualidad() {
    return hasta_actualidad;
  }


  /**
   * Sets the value of the 'hasta_actualidad' field.
   * @param value the value to set.
   */
  public void setHastaActualidad(boolean value) {
    this.hasta_actualidad = value;
  }

  /**
   * Gets the value of the 'ubicacion_pais' field.
   * @return The value of the 'ubicacion_pais' field.
   */
  public java.lang.String getUbicacionPais() {
    return ubicacion_pais;
  }


  /**
   * Sets the value of the 'ubicacion_pais' field.
   * @param value the value to set.
   */
  public void setUbicacionPais(java.lang.String value) {
    this.ubicacion_pais = value;
  }

  /**
   * Gets the value of the 'ubicacion_departamento' field.
   * @return The value of the 'ubicacion_departamento' field.
   */
  public java.lang.String getUbicacionDepartamento() {
    return ubicacion_departamento;
  }


  /**
   * Sets the value of the 'ubicacion_departamento' field.
   * @param value the value to set.
   */
  public void setUbicacionDepartamento(java.lang.String value) {
    this.ubicacion_departamento = value;
  }

  /**
   * Gets the value of the 'ubicacion_provincia' field.
   * @return The value of the 'ubicacion_provincia' field.
   */
  public java.lang.String getUbicacionProvincia() {
    return ubicacion_provincia;
  }


  /**
   * Sets the value of the 'ubicacion_provincia' field.
   * @param value the value to set.
   */
  public void setUbicacionProvincia(java.lang.String value) {
    this.ubicacion_provincia = value;
  }

  /**
   * Gets the value of the 'ubicacion_distrito' field.
   * @return The value of the 'ubicacion_distrito' field.
   */
  public java.lang.String getUbicacionDistrito() {
    return ubicacion_distrito;
  }


  /**
   * Sets the value of the 'ubicacion_distrito' field.
   * @param value the value to set.
   */
  public void setUbicacionDistrito(java.lang.String value) {
    this.ubicacion_distrito = value;
  }

  /**
   * Gets the value of the 'ubicacion_direccion' field.
   * @return The value of the 'ubicacion_direccion' field.
   */
  public java.lang.String getUbicacionDireccion() {
    return ubicacion_direccion;
  }


  /**
   * Sets the value of the 'ubicacion_direccion' field.
   * @param value the value to set.
   */
  public void setUbicacionDireccion(java.lang.String value) {
    this.ubicacion_direccion = value;
  }

  /**
   * Gets the value of the 'ruc' field.
   * @return The value of the 'ruc' field.
   */
  public java.lang.String getRuc() {
    return ruc;
  }


  /**
   * Sets the value of the 'ruc' field.
   * @param value the value to set.
   */
  public void setRuc(java.lang.String value) {
    this.ruc = value;
  }

  /**
   * Creates a new ExperienciaLaboral RecordBuilder.
   * @return A new ExperienciaLaboral RecordBuilder
   */
  public static openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder newBuilder() {
    return new openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder();
  }

  /**
   * Creates a new ExperienciaLaboral RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ExperienciaLaboral RecordBuilder
   */
  public static openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder newBuilder(openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder other) {
    if (other == null) {
      return new openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder();
    } else {
      return new openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder(other);
    }
  }

  /**
   * Creates a new ExperienciaLaboral RecordBuilder by copying an existing ExperienciaLaboral instance.
   * @param other The existing instance to copy.
   * @return A new ExperienciaLaboral RecordBuilder
   */
  public static openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder newBuilder(openpolitica.jne.elecciones.data.ExperienciaLaboral other) {
    if (other == null) {
      return new openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder();
    } else {
      return new openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder(other);
    }
  }

  /**
   * RecordBuilder for ExperienciaLaboral instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ExperienciaLaboral>
    implements org.apache.avro.data.RecordBuilder<ExperienciaLaboral> {

    private int item;
    /** TXCENTROTRABAJO */
    private java.lang.String centro_trabajo;
    /** TXOCUPACIONPROFESION */
    private java.lang.String ocupacion_profesion;
    /** TXANIOTRABAJODESDE */
    private java.lang.Integer anio_desde;
    /** TXANIOTRABAJOHASTA */
    private java.lang.Integer anio_hasta;
    private boolean hasta_actualidad;
    private java.lang.String ubicacion_pais;
    private java.lang.String ubicacion_departamento;
    private java.lang.String ubicacion_provincia;
    private java.lang.String ubicacion_distrito;
    private java.lang.String ubicacion_direccion;
    private java.lang.String ruc;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.item)) {
        this.item = data().deepCopy(fields()[0].schema(), other.item);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.centro_trabajo)) {
        this.centro_trabajo = data().deepCopy(fields()[1].schema(), other.centro_trabajo);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.ocupacion_profesion)) {
        this.ocupacion_profesion = data().deepCopy(fields()[2].schema(), other.ocupacion_profesion);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.anio_desde)) {
        this.anio_desde = data().deepCopy(fields()[3].schema(), other.anio_desde);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.anio_hasta)) {
        this.anio_hasta = data().deepCopy(fields()[4].schema(), other.anio_hasta);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.hasta_actualidad)) {
        this.hasta_actualidad = data().deepCopy(fields()[5].schema(), other.hasta_actualidad);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.ubicacion_pais)) {
        this.ubicacion_pais = data().deepCopy(fields()[6].schema(), other.ubicacion_pais);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.ubicacion_departamento)) {
        this.ubicacion_departamento = data().deepCopy(fields()[7].schema(), other.ubicacion_departamento);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.ubicacion_provincia)) {
        this.ubicacion_provincia = data().deepCopy(fields()[8].schema(), other.ubicacion_provincia);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.ubicacion_distrito)) {
        this.ubicacion_distrito = data().deepCopy(fields()[9].schema(), other.ubicacion_distrito);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.ubicacion_direccion)) {
        this.ubicacion_direccion = data().deepCopy(fields()[10].schema(), other.ubicacion_direccion);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.ruc)) {
        this.ruc = data().deepCopy(fields()[11].schema(), other.ruc);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
    }

    /**
     * Creates a Builder by copying an existing ExperienciaLaboral instance
     * @param other The existing instance to copy.
     */
    private Builder(openpolitica.jne.elecciones.data.ExperienciaLaboral other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.item)) {
        this.item = data().deepCopy(fields()[0].schema(), other.item);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.centro_trabajo)) {
        this.centro_trabajo = data().deepCopy(fields()[1].schema(), other.centro_trabajo);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ocupacion_profesion)) {
        this.ocupacion_profesion = data().deepCopy(fields()[2].schema(), other.ocupacion_profesion);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.anio_desde)) {
        this.anio_desde = data().deepCopy(fields()[3].schema(), other.anio_desde);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.anio_hasta)) {
        this.anio_hasta = data().deepCopy(fields()[4].schema(), other.anio_hasta);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.hasta_actualidad)) {
        this.hasta_actualidad = data().deepCopy(fields()[5].schema(), other.hasta_actualidad);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.ubicacion_pais)) {
        this.ubicacion_pais = data().deepCopy(fields()[6].schema(), other.ubicacion_pais);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ubicacion_departamento)) {
        this.ubicacion_departamento = data().deepCopy(fields()[7].schema(), other.ubicacion_departamento);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.ubicacion_provincia)) {
        this.ubicacion_provincia = data().deepCopy(fields()[8].schema(), other.ubicacion_provincia);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.ubicacion_distrito)) {
        this.ubicacion_distrito = data().deepCopy(fields()[9].schema(), other.ubicacion_distrito);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ubicacion_direccion)) {
        this.ubicacion_direccion = data().deepCopy(fields()[10].schema(), other.ubicacion_direccion);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.ruc)) {
        this.ruc = data().deepCopy(fields()[11].schema(), other.ruc);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'item' field.
      * @return The value.
      */
    public int getItem() {
      return item;
    }


    /**
      * Sets the value of the 'item' field.
      * @param value The value of 'item'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder setItem(int value) {
      validate(fields()[0], value);
      this.item = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'item' field has been set.
      * @return True if the 'item' field has been set, false otherwise.
      */
    public boolean hasItem() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'item' field.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder clearItem() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'centro_trabajo' field.
      * TXCENTROTRABAJO
      * @return The value.
      */
    public java.lang.String getCentroTrabajo() {
      return centro_trabajo;
    }


    /**
      * Sets the value of the 'centro_trabajo' field.
      * TXCENTROTRABAJO
      * @param value The value of 'centro_trabajo'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder setCentroTrabajo(java.lang.String value) {
      validate(fields()[1], value);
      this.centro_trabajo = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'centro_trabajo' field has been set.
      * TXCENTROTRABAJO
      * @return True if the 'centro_trabajo' field has been set, false otherwise.
      */
    public boolean hasCentroTrabajo() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'centro_trabajo' field.
      * TXCENTROTRABAJO
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder clearCentroTrabajo() {
      centro_trabajo = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ocupacion_profesion' field.
      * TXOCUPACIONPROFESION
      * @return The value.
      */
    public java.lang.String getOcupacionProfesion() {
      return ocupacion_profesion;
    }


    /**
      * Sets the value of the 'ocupacion_profesion' field.
      * TXOCUPACIONPROFESION
      * @param value The value of 'ocupacion_profesion'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder setOcupacionProfesion(java.lang.String value) {
      validate(fields()[2], value);
      this.ocupacion_profesion = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ocupacion_profesion' field has been set.
      * TXOCUPACIONPROFESION
      * @return True if the 'ocupacion_profesion' field has been set, false otherwise.
      */
    public boolean hasOcupacionProfesion() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ocupacion_profesion' field.
      * TXOCUPACIONPROFESION
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder clearOcupacionProfesion() {
      ocupacion_profesion = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'anio_desde' field.
      * TXANIOTRABAJODESDE
      * @return The value.
      */
    public java.lang.Integer getAnioDesde() {
      return anio_desde;
    }


    /**
      * Sets the value of the 'anio_desde' field.
      * TXANIOTRABAJODESDE
      * @param value The value of 'anio_desde'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder setAnioDesde(java.lang.Integer value) {
      validate(fields()[3], value);
      this.anio_desde = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'anio_desde' field has been set.
      * TXANIOTRABAJODESDE
      * @return True if the 'anio_desde' field has been set, false otherwise.
      */
    public boolean hasAnioDesde() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'anio_desde' field.
      * TXANIOTRABAJODESDE
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder clearAnioDesde() {
      anio_desde = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'anio_hasta' field.
      * TXANIOTRABAJOHASTA
      * @return The value.
      */
    public java.lang.Integer getAnioHasta() {
      return anio_hasta;
    }


    /**
      * Sets the value of the 'anio_hasta' field.
      * TXANIOTRABAJOHASTA
      * @param value The value of 'anio_hasta'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder setAnioHasta(java.lang.Integer value) {
      validate(fields()[4], value);
      this.anio_hasta = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'anio_hasta' field has been set.
      * TXANIOTRABAJOHASTA
      * @return True if the 'anio_hasta' field has been set, false otherwise.
      */
    public boolean hasAnioHasta() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'anio_hasta' field.
      * TXANIOTRABAJOHASTA
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder clearAnioHasta() {
      anio_hasta = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'hasta_actualidad' field.
      * @return The value.
      */
    public boolean getHastaActualidad() {
      return hasta_actualidad;
    }


    /**
      * Sets the value of the 'hasta_actualidad' field.
      * @param value The value of 'hasta_actualidad'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder setHastaActualidad(boolean value) {
      validate(fields()[5], value);
      this.hasta_actualidad = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'hasta_actualidad' field has been set.
      * @return True if the 'hasta_actualidad' field has been set, false otherwise.
      */
    public boolean hasHastaActualidad() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'hasta_actualidad' field.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder clearHastaActualidad() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'ubicacion_pais' field.
      * @return The value.
      */
    public java.lang.String getUbicacionPais() {
      return ubicacion_pais;
    }


    /**
      * Sets the value of the 'ubicacion_pais' field.
      * @param value The value of 'ubicacion_pais'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder setUbicacionPais(java.lang.String value) {
      validate(fields()[6], value);
      this.ubicacion_pais = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'ubicacion_pais' field has been set.
      * @return True if the 'ubicacion_pais' field has been set, false otherwise.
      */
    public boolean hasUbicacionPais() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'ubicacion_pais' field.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder clearUbicacionPais() {
      ubicacion_pais = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'ubicacion_departamento' field.
      * @return The value.
      */
    public java.lang.String getUbicacionDepartamento() {
      return ubicacion_departamento;
    }


    /**
      * Sets the value of the 'ubicacion_departamento' field.
      * @param value The value of 'ubicacion_departamento'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder setUbicacionDepartamento(java.lang.String value) {
      validate(fields()[7], value);
      this.ubicacion_departamento = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'ubicacion_departamento' field has been set.
      * @return True if the 'ubicacion_departamento' field has been set, false otherwise.
      */
    public boolean hasUbicacionDepartamento() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'ubicacion_departamento' field.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder clearUbicacionDepartamento() {
      ubicacion_departamento = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'ubicacion_provincia' field.
      * @return The value.
      */
    public java.lang.String getUbicacionProvincia() {
      return ubicacion_provincia;
    }


    /**
      * Sets the value of the 'ubicacion_provincia' field.
      * @param value The value of 'ubicacion_provincia'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder setUbicacionProvincia(java.lang.String value) {
      validate(fields()[8], value);
      this.ubicacion_provincia = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'ubicacion_provincia' field has been set.
      * @return True if the 'ubicacion_provincia' field has been set, false otherwise.
      */
    public boolean hasUbicacionProvincia() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'ubicacion_provincia' field.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder clearUbicacionProvincia() {
      ubicacion_provincia = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'ubicacion_distrito' field.
      * @return The value.
      */
    public java.lang.String getUbicacionDistrito() {
      return ubicacion_distrito;
    }


    /**
      * Sets the value of the 'ubicacion_distrito' field.
      * @param value The value of 'ubicacion_distrito'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder setUbicacionDistrito(java.lang.String value) {
      validate(fields()[9], value);
      this.ubicacion_distrito = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'ubicacion_distrito' field has been set.
      * @return True if the 'ubicacion_distrito' field has been set, false otherwise.
      */
    public boolean hasUbicacionDistrito() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'ubicacion_distrito' field.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder clearUbicacionDistrito() {
      ubicacion_distrito = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'ubicacion_direccion' field.
      * @return The value.
      */
    public java.lang.String getUbicacionDireccion() {
      return ubicacion_direccion;
    }


    /**
      * Sets the value of the 'ubicacion_direccion' field.
      * @param value The value of 'ubicacion_direccion'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder setUbicacionDireccion(java.lang.String value) {
      validate(fields()[10], value);
      this.ubicacion_direccion = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'ubicacion_direccion' field has been set.
      * @return True if the 'ubicacion_direccion' field has been set, false otherwise.
      */
    public boolean hasUbicacionDireccion() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'ubicacion_direccion' field.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder clearUbicacionDireccion() {
      ubicacion_direccion = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'ruc' field.
      * @return The value.
      */
    public java.lang.String getRuc() {
      return ruc;
    }


    /**
      * Sets the value of the 'ruc' field.
      * @param value The value of 'ruc'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder setRuc(java.lang.String value) {
      validate(fields()[11], value);
      this.ruc = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'ruc' field has been set.
      * @return True if the 'ruc' field has been set, false otherwise.
      */
    public boolean hasRuc() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'ruc' field.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.data.ExperienciaLaboral.Builder clearRuc() {
      ruc = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ExperienciaLaboral build() {
      try {
        ExperienciaLaboral record = new ExperienciaLaboral();
        record.item = fieldSetFlags()[0] ? this.item : (java.lang.Integer) defaultValue(fields()[0]);
        record.centro_trabajo = fieldSetFlags()[1] ? this.centro_trabajo : (java.lang.String) defaultValue(fields()[1]);
        record.ocupacion_profesion = fieldSetFlags()[2] ? this.ocupacion_profesion : (java.lang.String) defaultValue(fields()[2]);
        record.anio_desde = fieldSetFlags()[3] ? this.anio_desde : (java.lang.Integer) defaultValue(fields()[3]);
        record.anio_hasta = fieldSetFlags()[4] ? this.anio_hasta : (java.lang.Integer) defaultValue(fields()[4]);
        record.hasta_actualidad = fieldSetFlags()[5] ? this.hasta_actualidad : (java.lang.Boolean) defaultValue(fields()[5]);
        record.ubicacion_pais = fieldSetFlags()[6] ? this.ubicacion_pais : (java.lang.String) defaultValue(fields()[6]);
        record.ubicacion_departamento = fieldSetFlags()[7] ? this.ubicacion_departamento : (java.lang.String) defaultValue(fields()[7]);
        record.ubicacion_provincia = fieldSetFlags()[8] ? this.ubicacion_provincia : (java.lang.String) defaultValue(fields()[8]);
        record.ubicacion_distrito = fieldSetFlags()[9] ? this.ubicacion_distrito : (java.lang.String) defaultValue(fields()[9]);
        record.ubicacion_direccion = fieldSetFlags()[10] ? this.ubicacion_direccion : (java.lang.String) defaultValue(fields()[10]);
        record.ruc = fieldSetFlags()[11] ? this.ruc : (java.lang.String) defaultValue(fields()[11]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ExperienciaLaboral>
    WRITER$ = (org.apache.avro.io.DatumWriter<ExperienciaLaboral>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ExperienciaLaboral>
    READER$ = (org.apache.avro.io.DatumReader<ExperienciaLaboral>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.item);

    out.writeString(this.centro_trabajo);

    out.writeString(this.ocupacion_profesion);

    if (this.anio_desde == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.anio_desde);
    }

    if (this.anio_hasta == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.anio_hasta);
    }

    out.writeBoolean(this.hasta_actualidad);

    out.writeString(this.ubicacion_pais);

    out.writeString(this.ubicacion_departamento);

    out.writeString(this.ubicacion_provincia);

    out.writeString(this.ubicacion_distrito);

    out.writeString(this.ubicacion_direccion);

    out.writeString(this.ruc);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.item = in.readInt();

      this.centro_trabajo = in.readString();

      this.ocupacion_profesion = in.readString();

      if (in.readIndex() != 0) {
        in.readNull();
        this.anio_desde = null;
      } else {
        this.anio_desde = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.anio_hasta = null;
      } else {
        this.anio_hasta = in.readInt();
      }

      this.hasta_actualidad = in.readBoolean();

      this.ubicacion_pais = in.readString();

      this.ubicacion_departamento = in.readString();

      this.ubicacion_provincia = in.readString();

      this.ubicacion_distrito = in.readString();

      this.ubicacion_direccion = in.readString();

      this.ruc = in.readString();

    } else {
      for (int i = 0; i < 12; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.item = in.readInt();
          break;

        case 1:
          this.centro_trabajo = in.readString();
          break;

        case 2:
          this.ocupacion_profesion = in.readString();
          break;

        case 3:
          if (in.readIndex() != 0) {
            in.readNull();
            this.anio_desde = null;
          } else {
            this.anio_desde = in.readInt();
          }
          break;

        case 4:
          if (in.readIndex() != 0) {
            in.readNull();
            this.anio_hasta = null;
          } else {
            this.anio_hasta = in.readInt();
          }
          break;

        case 5:
          this.hasta_actualidad = in.readBoolean();
          break;

        case 6:
          this.ubicacion_pais = in.readString();
          break;

        case 7:
          this.ubicacion_departamento = in.readString();
          break;

        case 8:
          this.ubicacion_provincia = in.readString();
          break;

        case 9:
          this.ubicacion_distrito = in.readString();
          break;

        case 10:
          this.ubicacion_direccion = in.readString();
          break;

        case 11:
          this.ruc = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










