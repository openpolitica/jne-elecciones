/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package openpolitica.jne.elecciones;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Ingreso extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1536218854020006297L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Ingreso\",\"namespace\":\"openpolitica.jne.elecciones\",\"fields\":[{\"name\":\"anio\",\"type\":[\"int\",\"null\"]},{\"name\":\"remuneracion_bruta_publico\",\"type\":\"double\",\"doc\":\"FLREMUBRUTAPUBLICO\"},{\"name\":\"remuneracion_bruta_privado\",\"type\":\"double\",\"doc\":\"FLREMUBRUTAPRIVADO\"},{\"name\":\"renta_individual_publico\",\"type\":\"double\",\"doc\":\"FLRENTAINDIVIDUALPUBLICO\"},{\"name\":\"renta_individual_privado\",\"type\":\"double\",\"doc\":\"FLRENTAINDIVIDUALPRIVADO\"},{\"name\":\"otro_ingreso_publico\",\"type\":\"double\",\"doc\":\"FLOTROINGRESOPUBLICO\"},{\"name\":\"otro_ingreso_privado\",\"type\":\"double\",\"doc\":\"FLOTROINGRESOPRIVADO\"},{\"name\":\"total_remuneracion_bruta\",\"type\":\"double\",\"doc\":\"TOTALREMBRUTA\"},{\"name\":\"total_renta\",\"type\":\"double\",\"doc\":\"TOTALRENTA\"},{\"name\":\"total_otro\",\"type\":\"double\",\"doc\":\"TOTALOTRO\"},{\"name\":\"total\",\"type\":\"double\",\"doc\":\"TOTAL\"},{\"name\":\"total_privado\",\"type\":\"double\",\"doc\":\"TOTALPRIVADO\"},{\"name\":\"total_publico\",\"type\":\"double\",\"doc\":\"TOTALPUBLICO\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Ingreso> ENCODER =
      new BinaryMessageEncoder<Ingreso>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Ingreso> DECODER =
      new BinaryMessageDecoder<Ingreso>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Ingreso> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Ingreso> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Ingreso> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Ingreso>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Ingreso to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Ingreso from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Ingreso instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Ingreso fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.Integer anio;
  /** FLREMUBRUTAPUBLICO */
   private double remuneracion_bruta_publico;
  /** FLREMUBRUTAPRIVADO */
   private double remuneracion_bruta_privado;
  /** FLRENTAINDIVIDUALPUBLICO */
   private double renta_individual_publico;
  /** FLRENTAINDIVIDUALPRIVADO */
   private double renta_individual_privado;
  /** FLOTROINGRESOPUBLICO */
   private double otro_ingreso_publico;
  /** FLOTROINGRESOPRIVADO */
   private double otro_ingreso_privado;
  /** TOTALREMBRUTA */
   private double total_remuneracion_bruta;
  /** TOTALRENTA */
   private double total_renta;
  /** TOTALOTRO */
   private double total_otro;
  /** TOTAL */
   private double total;
  /** TOTALPRIVADO */
   private double total_privado;
  /** TOTALPUBLICO */
   private double total_publico;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Ingreso() {}

  /**
   * All-args constructor.
   * @param anio The new value for anio
   * @param remuneracion_bruta_publico FLREMUBRUTAPUBLICO
   * @param remuneracion_bruta_privado FLREMUBRUTAPRIVADO
   * @param renta_individual_publico FLRENTAINDIVIDUALPUBLICO
   * @param renta_individual_privado FLRENTAINDIVIDUALPRIVADO
   * @param otro_ingreso_publico FLOTROINGRESOPUBLICO
   * @param otro_ingreso_privado FLOTROINGRESOPRIVADO
   * @param total_remuneracion_bruta TOTALREMBRUTA
   * @param total_renta TOTALRENTA
   * @param total_otro TOTALOTRO
   * @param total TOTAL
   * @param total_privado TOTALPRIVADO
   * @param total_publico TOTALPUBLICO
   */
  public Ingreso(java.lang.Integer anio, java.lang.Double remuneracion_bruta_publico, java.lang.Double remuneracion_bruta_privado, java.lang.Double renta_individual_publico, java.lang.Double renta_individual_privado, java.lang.Double otro_ingreso_publico, java.lang.Double otro_ingreso_privado, java.lang.Double total_remuneracion_bruta, java.lang.Double total_renta, java.lang.Double total_otro, java.lang.Double total, java.lang.Double total_privado, java.lang.Double total_publico) {
    this.anio = anio;
    this.remuneracion_bruta_publico = remuneracion_bruta_publico;
    this.remuneracion_bruta_privado = remuneracion_bruta_privado;
    this.renta_individual_publico = renta_individual_publico;
    this.renta_individual_privado = renta_individual_privado;
    this.otro_ingreso_publico = otro_ingreso_publico;
    this.otro_ingreso_privado = otro_ingreso_privado;
    this.total_remuneracion_bruta = total_remuneracion_bruta;
    this.total_renta = total_renta;
    this.total_otro = total_otro;
    this.total = total;
    this.total_privado = total_privado;
    this.total_publico = total_publico;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return anio;
    case 1: return remuneracion_bruta_publico;
    case 2: return remuneracion_bruta_privado;
    case 3: return renta_individual_publico;
    case 4: return renta_individual_privado;
    case 5: return otro_ingreso_publico;
    case 6: return otro_ingreso_privado;
    case 7: return total_remuneracion_bruta;
    case 8: return total_renta;
    case 9: return total_otro;
    case 10: return total;
    case 11: return total_privado;
    case 12: return total_publico;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: anio = (java.lang.Integer)value$; break;
    case 1: remuneracion_bruta_publico = (java.lang.Double)value$; break;
    case 2: remuneracion_bruta_privado = (java.lang.Double)value$; break;
    case 3: renta_individual_publico = (java.lang.Double)value$; break;
    case 4: renta_individual_privado = (java.lang.Double)value$; break;
    case 5: otro_ingreso_publico = (java.lang.Double)value$; break;
    case 6: otro_ingreso_privado = (java.lang.Double)value$; break;
    case 7: total_remuneracion_bruta = (java.lang.Double)value$; break;
    case 8: total_renta = (java.lang.Double)value$; break;
    case 9: total_otro = (java.lang.Double)value$; break;
    case 10: total = (java.lang.Double)value$; break;
    case 11: total_privado = (java.lang.Double)value$; break;
    case 12: total_publico = (java.lang.Double)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'anio' field.
   * @return The value of the 'anio' field.
   */
  public java.lang.Integer getAnio() {
    return anio;
  }


  /**
   * Sets the value of the 'anio' field.
   * @param value the value to set.
   */
  public void setAnio(java.lang.Integer value) {
    this.anio = value;
  }

  /**
   * Gets the value of the 'remuneracion_bruta_publico' field.
   * @return FLREMUBRUTAPUBLICO
   */
  public double getRemuneracionBrutaPublico() {
    return remuneracion_bruta_publico;
  }


  /**
   * Sets the value of the 'remuneracion_bruta_publico' field.
   * FLREMUBRUTAPUBLICO
   * @param value the value to set.
   */
  public void setRemuneracionBrutaPublico(double value) {
    this.remuneracion_bruta_publico = value;
  }

  /**
   * Gets the value of the 'remuneracion_bruta_privado' field.
   * @return FLREMUBRUTAPRIVADO
   */
  public double getRemuneracionBrutaPrivado() {
    return remuneracion_bruta_privado;
  }


  /**
   * Sets the value of the 'remuneracion_bruta_privado' field.
   * FLREMUBRUTAPRIVADO
   * @param value the value to set.
   */
  public void setRemuneracionBrutaPrivado(double value) {
    this.remuneracion_bruta_privado = value;
  }

  /**
   * Gets the value of the 'renta_individual_publico' field.
   * @return FLRENTAINDIVIDUALPUBLICO
   */
  public double getRentaIndividualPublico() {
    return renta_individual_publico;
  }


  /**
   * Sets the value of the 'renta_individual_publico' field.
   * FLRENTAINDIVIDUALPUBLICO
   * @param value the value to set.
   */
  public void setRentaIndividualPublico(double value) {
    this.renta_individual_publico = value;
  }

  /**
   * Gets the value of the 'renta_individual_privado' field.
   * @return FLRENTAINDIVIDUALPRIVADO
   */
  public double getRentaIndividualPrivado() {
    return renta_individual_privado;
  }


  /**
   * Sets the value of the 'renta_individual_privado' field.
   * FLRENTAINDIVIDUALPRIVADO
   * @param value the value to set.
   */
  public void setRentaIndividualPrivado(double value) {
    this.renta_individual_privado = value;
  }

  /**
   * Gets the value of the 'otro_ingreso_publico' field.
   * @return FLOTROINGRESOPUBLICO
   */
  public double getOtroIngresoPublico() {
    return otro_ingreso_publico;
  }


  /**
   * Sets the value of the 'otro_ingreso_publico' field.
   * FLOTROINGRESOPUBLICO
   * @param value the value to set.
   */
  public void setOtroIngresoPublico(double value) {
    this.otro_ingreso_publico = value;
  }

  /**
   * Gets the value of the 'otro_ingreso_privado' field.
   * @return FLOTROINGRESOPRIVADO
   */
  public double getOtroIngresoPrivado() {
    return otro_ingreso_privado;
  }


  /**
   * Sets the value of the 'otro_ingreso_privado' field.
   * FLOTROINGRESOPRIVADO
   * @param value the value to set.
   */
  public void setOtroIngresoPrivado(double value) {
    this.otro_ingreso_privado = value;
  }

  /**
   * Gets the value of the 'total_remuneracion_bruta' field.
   * @return TOTALREMBRUTA
   */
  public double getTotalRemuneracionBruta() {
    return total_remuneracion_bruta;
  }


  /**
   * Sets the value of the 'total_remuneracion_bruta' field.
   * TOTALREMBRUTA
   * @param value the value to set.
   */
  public void setTotalRemuneracionBruta(double value) {
    this.total_remuneracion_bruta = value;
  }

  /**
   * Gets the value of the 'total_renta' field.
   * @return TOTALRENTA
   */
  public double getTotalRenta() {
    return total_renta;
  }


  /**
   * Sets the value of the 'total_renta' field.
   * TOTALRENTA
   * @param value the value to set.
   */
  public void setTotalRenta(double value) {
    this.total_renta = value;
  }

  /**
   * Gets the value of the 'total_otro' field.
   * @return TOTALOTRO
   */
  public double getTotalOtro() {
    return total_otro;
  }


  /**
   * Sets the value of the 'total_otro' field.
   * TOTALOTRO
   * @param value the value to set.
   */
  public void setTotalOtro(double value) {
    this.total_otro = value;
  }

  /**
   * Gets the value of the 'total' field.
   * @return TOTAL
   */
  public double getTotal() {
    return total;
  }


  /**
   * Sets the value of the 'total' field.
   * TOTAL
   * @param value the value to set.
   */
  public void setTotal(double value) {
    this.total = value;
  }

  /**
   * Gets the value of the 'total_privado' field.
   * @return TOTALPRIVADO
   */
  public double getTotalPrivado() {
    return total_privado;
  }


  /**
   * Sets the value of the 'total_privado' field.
   * TOTALPRIVADO
   * @param value the value to set.
   */
  public void setTotalPrivado(double value) {
    this.total_privado = value;
  }

  /**
   * Gets the value of the 'total_publico' field.
   * @return TOTALPUBLICO
   */
  public double getTotalPublico() {
    return total_publico;
  }


  /**
   * Sets the value of the 'total_publico' field.
   * TOTALPUBLICO
   * @param value the value to set.
   */
  public void setTotalPublico(double value) {
    this.total_publico = value;
  }

  /**
   * Creates a new Ingreso RecordBuilder.
   * @return A new Ingreso RecordBuilder
   */
  public static openpolitica.jne.elecciones.Ingreso.Builder newBuilder() {
    return new openpolitica.jne.elecciones.Ingreso.Builder();
  }

  /**
   * Creates a new Ingreso RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Ingreso RecordBuilder
   */
  public static openpolitica.jne.elecciones.Ingreso.Builder newBuilder(openpolitica.jne.elecciones.Ingreso.Builder other) {
    if (other == null) {
      return new openpolitica.jne.elecciones.Ingreso.Builder();
    } else {
      return new openpolitica.jne.elecciones.Ingreso.Builder(other);
    }
  }

  /**
   * Creates a new Ingreso RecordBuilder by copying an existing Ingreso instance.
   * @param other The existing instance to copy.
   * @return A new Ingreso RecordBuilder
   */
  public static openpolitica.jne.elecciones.Ingreso.Builder newBuilder(openpolitica.jne.elecciones.Ingreso other) {
    if (other == null) {
      return new openpolitica.jne.elecciones.Ingreso.Builder();
    } else {
      return new openpolitica.jne.elecciones.Ingreso.Builder(other);
    }
  }

  /**
   * RecordBuilder for Ingreso instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Ingreso>
    implements org.apache.avro.data.RecordBuilder<Ingreso> {

    private java.lang.Integer anio;
    /** FLREMUBRUTAPUBLICO */
    private double remuneracion_bruta_publico;
    /** FLREMUBRUTAPRIVADO */
    private double remuneracion_bruta_privado;
    /** FLRENTAINDIVIDUALPUBLICO */
    private double renta_individual_publico;
    /** FLRENTAINDIVIDUALPRIVADO */
    private double renta_individual_privado;
    /** FLOTROINGRESOPUBLICO */
    private double otro_ingreso_publico;
    /** FLOTROINGRESOPRIVADO */
    private double otro_ingreso_privado;
    /** TOTALREMBRUTA */
    private double total_remuneracion_bruta;
    /** TOTALRENTA */
    private double total_renta;
    /** TOTALOTRO */
    private double total_otro;
    /** TOTAL */
    private double total;
    /** TOTALPRIVADO */
    private double total_privado;
    /** TOTALPUBLICO */
    private double total_publico;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(openpolitica.jne.elecciones.Ingreso.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.anio)) {
        this.anio = data().deepCopy(fields()[0].schema(), other.anio);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.remuneracion_bruta_publico)) {
        this.remuneracion_bruta_publico = data().deepCopy(fields()[1].schema(), other.remuneracion_bruta_publico);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.remuneracion_bruta_privado)) {
        this.remuneracion_bruta_privado = data().deepCopy(fields()[2].schema(), other.remuneracion_bruta_privado);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.renta_individual_publico)) {
        this.renta_individual_publico = data().deepCopy(fields()[3].schema(), other.renta_individual_publico);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.renta_individual_privado)) {
        this.renta_individual_privado = data().deepCopy(fields()[4].schema(), other.renta_individual_privado);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.otro_ingreso_publico)) {
        this.otro_ingreso_publico = data().deepCopy(fields()[5].schema(), other.otro_ingreso_publico);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.otro_ingreso_privado)) {
        this.otro_ingreso_privado = data().deepCopy(fields()[6].schema(), other.otro_ingreso_privado);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.total_remuneracion_bruta)) {
        this.total_remuneracion_bruta = data().deepCopy(fields()[7].schema(), other.total_remuneracion_bruta);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.total_renta)) {
        this.total_renta = data().deepCopy(fields()[8].schema(), other.total_renta);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.total_otro)) {
        this.total_otro = data().deepCopy(fields()[9].schema(), other.total_otro);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.total)) {
        this.total = data().deepCopy(fields()[10].schema(), other.total);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.total_privado)) {
        this.total_privado = data().deepCopy(fields()[11].schema(), other.total_privado);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.total_publico)) {
        this.total_publico = data().deepCopy(fields()[12].schema(), other.total_publico);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing Ingreso instance
     * @param other The existing instance to copy.
     */
    private Builder(openpolitica.jne.elecciones.Ingreso other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.anio)) {
        this.anio = data().deepCopy(fields()[0].schema(), other.anio);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.remuneracion_bruta_publico)) {
        this.remuneracion_bruta_publico = data().deepCopy(fields()[1].schema(), other.remuneracion_bruta_publico);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.remuneracion_bruta_privado)) {
        this.remuneracion_bruta_privado = data().deepCopy(fields()[2].schema(), other.remuneracion_bruta_privado);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.renta_individual_publico)) {
        this.renta_individual_publico = data().deepCopy(fields()[3].schema(), other.renta_individual_publico);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.renta_individual_privado)) {
        this.renta_individual_privado = data().deepCopy(fields()[4].schema(), other.renta_individual_privado);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.otro_ingreso_publico)) {
        this.otro_ingreso_publico = data().deepCopy(fields()[5].schema(), other.otro_ingreso_publico);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.otro_ingreso_privado)) {
        this.otro_ingreso_privado = data().deepCopy(fields()[6].schema(), other.otro_ingreso_privado);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.total_remuneracion_bruta)) {
        this.total_remuneracion_bruta = data().deepCopy(fields()[7].schema(), other.total_remuneracion_bruta);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.total_renta)) {
        this.total_renta = data().deepCopy(fields()[8].schema(), other.total_renta);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.total_otro)) {
        this.total_otro = data().deepCopy(fields()[9].schema(), other.total_otro);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.total)) {
        this.total = data().deepCopy(fields()[10].schema(), other.total);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.total_privado)) {
        this.total_privado = data().deepCopy(fields()[11].schema(), other.total_privado);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.total_publico)) {
        this.total_publico = data().deepCopy(fields()[12].schema(), other.total_publico);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'anio' field.
      * @return The value.
      */
    public java.lang.Integer getAnio() {
      return anio;
    }


    /**
      * Sets the value of the 'anio' field.
      * @param value The value of 'anio'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder setAnio(java.lang.Integer value) {
      validate(fields()[0], value);
      this.anio = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'anio' field has been set.
      * @return True if the 'anio' field has been set, false otherwise.
      */
    public boolean hasAnio() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'anio' field.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder clearAnio() {
      anio = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'remuneracion_bruta_publico' field.
      * FLREMUBRUTAPUBLICO
      * @return The value.
      */
    public double getRemuneracionBrutaPublico() {
      return remuneracion_bruta_publico;
    }


    /**
      * Sets the value of the 'remuneracion_bruta_publico' field.
      * FLREMUBRUTAPUBLICO
      * @param value The value of 'remuneracion_bruta_publico'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder setRemuneracionBrutaPublico(double value) {
      validate(fields()[1], value);
      this.remuneracion_bruta_publico = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'remuneracion_bruta_publico' field has been set.
      * FLREMUBRUTAPUBLICO
      * @return True if the 'remuneracion_bruta_publico' field has been set, false otherwise.
      */
    public boolean hasRemuneracionBrutaPublico() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'remuneracion_bruta_publico' field.
      * FLREMUBRUTAPUBLICO
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder clearRemuneracionBrutaPublico() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'remuneracion_bruta_privado' field.
      * FLREMUBRUTAPRIVADO
      * @return The value.
      */
    public double getRemuneracionBrutaPrivado() {
      return remuneracion_bruta_privado;
    }


    /**
      * Sets the value of the 'remuneracion_bruta_privado' field.
      * FLREMUBRUTAPRIVADO
      * @param value The value of 'remuneracion_bruta_privado'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder setRemuneracionBrutaPrivado(double value) {
      validate(fields()[2], value);
      this.remuneracion_bruta_privado = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'remuneracion_bruta_privado' field has been set.
      * FLREMUBRUTAPRIVADO
      * @return True if the 'remuneracion_bruta_privado' field has been set, false otherwise.
      */
    public boolean hasRemuneracionBrutaPrivado() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'remuneracion_bruta_privado' field.
      * FLREMUBRUTAPRIVADO
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder clearRemuneracionBrutaPrivado() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'renta_individual_publico' field.
      * FLRENTAINDIVIDUALPUBLICO
      * @return The value.
      */
    public double getRentaIndividualPublico() {
      return renta_individual_publico;
    }


    /**
      * Sets the value of the 'renta_individual_publico' field.
      * FLRENTAINDIVIDUALPUBLICO
      * @param value The value of 'renta_individual_publico'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder setRentaIndividualPublico(double value) {
      validate(fields()[3], value);
      this.renta_individual_publico = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'renta_individual_publico' field has been set.
      * FLRENTAINDIVIDUALPUBLICO
      * @return True if the 'renta_individual_publico' field has been set, false otherwise.
      */
    public boolean hasRentaIndividualPublico() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'renta_individual_publico' field.
      * FLRENTAINDIVIDUALPUBLICO
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder clearRentaIndividualPublico() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'renta_individual_privado' field.
      * FLRENTAINDIVIDUALPRIVADO
      * @return The value.
      */
    public double getRentaIndividualPrivado() {
      return renta_individual_privado;
    }


    /**
      * Sets the value of the 'renta_individual_privado' field.
      * FLRENTAINDIVIDUALPRIVADO
      * @param value The value of 'renta_individual_privado'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder setRentaIndividualPrivado(double value) {
      validate(fields()[4], value);
      this.renta_individual_privado = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'renta_individual_privado' field has been set.
      * FLRENTAINDIVIDUALPRIVADO
      * @return True if the 'renta_individual_privado' field has been set, false otherwise.
      */
    public boolean hasRentaIndividualPrivado() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'renta_individual_privado' field.
      * FLRENTAINDIVIDUALPRIVADO
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder clearRentaIndividualPrivado() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'otro_ingreso_publico' field.
      * FLOTROINGRESOPUBLICO
      * @return The value.
      */
    public double getOtroIngresoPublico() {
      return otro_ingreso_publico;
    }


    /**
      * Sets the value of the 'otro_ingreso_publico' field.
      * FLOTROINGRESOPUBLICO
      * @param value The value of 'otro_ingreso_publico'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder setOtroIngresoPublico(double value) {
      validate(fields()[5], value);
      this.otro_ingreso_publico = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'otro_ingreso_publico' field has been set.
      * FLOTROINGRESOPUBLICO
      * @return True if the 'otro_ingreso_publico' field has been set, false otherwise.
      */
    public boolean hasOtroIngresoPublico() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'otro_ingreso_publico' field.
      * FLOTROINGRESOPUBLICO
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder clearOtroIngresoPublico() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'otro_ingreso_privado' field.
      * FLOTROINGRESOPRIVADO
      * @return The value.
      */
    public double getOtroIngresoPrivado() {
      return otro_ingreso_privado;
    }


    /**
      * Sets the value of the 'otro_ingreso_privado' field.
      * FLOTROINGRESOPRIVADO
      * @param value The value of 'otro_ingreso_privado'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder setOtroIngresoPrivado(double value) {
      validate(fields()[6], value);
      this.otro_ingreso_privado = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'otro_ingreso_privado' field has been set.
      * FLOTROINGRESOPRIVADO
      * @return True if the 'otro_ingreso_privado' field has been set, false otherwise.
      */
    public boolean hasOtroIngresoPrivado() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'otro_ingreso_privado' field.
      * FLOTROINGRESOPRIVADO
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder clearOtroIngresoPrivado() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'total_remuneracion_bruta' field.
      * TOTALREMBRUTA
      * @return The value.
      */
    public double getTotalRemuneracionBruta() {
      return total_remuneracion_bruta;
    }


    /**
      * Sets the value of the 'total_remuneracion_bruta' field.
      * TOTALREMBRUTA
      * @param value The value of 'total_remuneracion_bruta'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder setTotalRemuneracionBruta(double value) {
      validate(fields()[7], value);
      this.total_remuneracion_bruta = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'total_remuneracion_bruta' field has been set.
      * TOTALREMBRUTA
      * @return True if the 'total_remuneracion_bruta' field has been set, false otherwise.
      */
    public boolean hasTotalRemuneracionBruta() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'total_remuneracion_bruta' field.
      * TOTALREMBRUTA
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder clearTotalRemuneracionBruta() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'total_renta' field.
      * TOTALRENTA
      * @return The value.
      */
    public double getTotalRenta() {
      return total_renta;
    }


    /**
      * Sets the value of the 'total_renta' field.
      * TOTALRENTA
      * @param value The value of 'total_renta'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder setTotalRenta(double value) {
      validate(fields()[8], value);
      this.total_renta = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'total_renta' field has been set.
      * TOTALRENTA
      * @return True if the 'total_renta' field has been set, false otherwise.
      */
    public boolean hasTotalRenta() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'total_renta' field.
      * TOTALRENTA
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder clearTotalRenta() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'total_otro' field.
      * TOTALOTRO
      * @return The value.
      */
    public double getTotalOtro() {
      return total_otro;
    }


    /**
      * Sets the value of the 'total_otro' field.
      * TOTALOTRO
      * @param value The value of 'total_otro'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder setTotalOtro(double value) {
      validate(fields()[9], value);
      this.total_otro = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'total_otro' field has been set.
      * TOTALOTRO
      * @return True if the 'total_otro' field has been set, false otherwise.
      */
    public boolean hasTotalOtro() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'total_otro' field.
      * TOTALOTRO
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder clearTotalOtro() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'total' field.
      * TOTAL
      * @return The value.
      */
    public double getTotal() {
      return total;
    }


    /**
      * Sets the value of the 'total' field.
      * TOTAL
      * @param value The value of 'total'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder setTotal(double value) {
      validate(fields()[10], value);
      this.total = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'total' field has been set.
      * TOTAL
      * @return True if the 'total' field has been set, false otherwise.
      */
    public boolean hasTotal() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'total' field.
      * TOTAL
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder clearTotal() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'total_privado' field.
      * TOTALPRIVADO
      * @return The value.
      */
    public double getTotalPrivado() {
      return total_privado;
    }


    /**
      * Sets the value of the 'total_privado' field.
      * TOTALPRIVADO
      * @param value The value of 'total_privado'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder setTotalPrivado(double value) {
      validate(fields()[11], value);
      this.total_privado = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'total_privado' field has been set.
      * TOTALPRIVADO
      * @return True if the 'total_privado' field has been set, false otherwise.
      */
    public boolean hasTotalPrivado() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'total_privado' field.
      * TOTALPRIVADO
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder clearTotalPrivado() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'total_publico' field.
      * TOTALPUBLICO
      * @return The value.
      */
    public double getTotalPublico() {
      return total_publico;
    }


    /**
      * Sets the value of the 'total_publico' field.
      * TOTALPUBLICO
      * @param value The value of 'total_publico'.
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder setTotalPublico(double value) {
      validate(fields()[12], value);
      this.total_publico = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'total_publico' field has been set.
      * TOTALPUBLICO
      * @return True if the 'total_publico' field has been set, false otherwise.
      */
    public boolean hasTotalPublico() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'total_publico' field.
      * TOTALPUBLICO
      * @return This builder.
      */
    public openpolitica.jne.elecciones.Ingreso.Builder clearTotalPublico() {
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Ingreso build() {
      try {
        Ingreso record = new Ingreso();
        record.anio = fieldSetFlags()[0] ? this.anio : (java.lang.Integer) defaultValue(fields()[0]);
        record.remuneracion_bruta_publico = fieldSetFlags()[1] ? this.remuneracion_bruta_publico : (java.lang.Double) defaultValue(fields()[1]);
        record.remuneracion_bruta_privado = fieldSetFlags()[2] ? this.remuneracion_bruta_privado : (java.lang.Double) defaultValue(fields()[2]);
        record.renta_individual_publico = fieldSetFlags()[3] ? this.renta_individual_publico : (java.lang.Double) defaultValue(fields()[3]);
        record.renta_individual_privado = fieldSetFlags()[4] ? this.renta_individual_privado : (java.lang.Double) defaultValue(fields()[4]);
        record.otro_ingreso_publico = fieldSetFlags()[5] ? this.otro_ingreso_publico : (java.lang.Double) defaultValue(fields()[5]);
        record.otro_ingreso_privado = fieldSetFlags()[6] ? this.otro_ingreso_privado : (java.lang.Double) defaultValue(fields()[6]);
        record.total_remuneracion_bruta = fieldSetFlags()[7] ? this.total_remuneracion_bruta : (java.lang.Double) defaultValue(fields()[7]);
        record.total_renta = fieldSetFlags()[8] ? this.total_renta : (java.lang.Double) defaultValue(fields()[8]);
        record.total_otro = fieldSetFlags()[9] ? this.total_otro : (java.lang.Double) defaultValue(fields()[9]);
        record.total = fieldSetFlags()[10] ? this.total : (java.lang.Double) defaultValue(fields()[10]);
        record.total_privado = fieldSetFlags()[11] ? this.total_privado : (java.lang.Double) defaultValue(fields()[11]);
        record.total_publico = fieldSetFlags()[12] ? this.total_publico : (java.lang.Double) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Ingreso>
    WRITER$ = (org.apache.avro.io.DatumWriter<Ingreso>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Ingreso>
    READER$ = (org.apache.avro.io.DatumReader<Ingreso>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.anio == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.anio);
    }

    out.writeDouble(this.remuneracion_bruta_publico);

    out.writeDouble(this.remuneracion_bruta_privado);

    out.writeDouble(this.renta_individual_publico);

    out.writeDouble(this.renta_individual_privado);

    out.writeDouble(this.otro_ingreso_publico);

    out.writeDouble(this.otro_ingreso_privado);

    out.writeDouble(this.total_remuneracion_bruta);

    out.writeDouble(this.total_renta);

    out.writeDouble(this.total_otro);

    out.writeDouble(this.total);

    out.writeDouble(this.total_privado);

    out.writeDouble(this.total_publico);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 0) {
        in.readNull();
        this.anio = null;
      } else {
        this.anio = in.readInt();
      }

      this.remuneracion_bruta_publico = in.readDouble();

      this.remuneracion_bruta_privado = in.readDouble();

      this.renta_individual_publico = in.readDouble();

      this.renta_individual_privado = in.readDouble();

      this.otro_ingreso_publico = in.readDouble();

      this.otro_ingreso_privado = in.readDouble();

      this.total_remuneracion_bruta = in.readDouble();

      this.total_renta = in.readDouble();

      this.total_otro = in.readDouble();

      this.total = in.readDouble();

      this.total_privado = in.readDouble();

      this.total_publico = in.readDouble();

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 0) {
            in.readNull();
            this.anio = null;
          } else {
            this.anio = in.readInt();
          }
          break;

        case 1:
          this.remuneracion_bruta_publico = in.readDouble();
          break;

        case 2:
          this.remuneracion_bruta_privado = in.readDouble();
          break;

        case 3:
          this.renta_individual_publico = in.readDouble();
          break;

        case 4:
          this.renta_individual_privado = in.readDouble();
          break;

        case 5:
          this.otro_ingreso_publico = in.readDouble();
          break;

        case 6:
          this.otro_ingreso_privado = in.readDouble();
          break;

        case 7:
          this.total_remuneracion_bruta = in.readDouble();
          break;

        case 8:
          this.total_renta = in.readDouble();
          break;

        case 9:
          this.total_otro = in.readDouble();
          break;

        case 10:
          this.total = in.readDouble();
          break;

        case 11:
          this.total_privado = in.readDouble();
          break;

        case 12:
          this.total_publico = in.readDouble();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










